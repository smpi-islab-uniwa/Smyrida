{"version":3,"sources":["components/Footer.js","components/FirsTime.js","components/CsvElements.js","components/InductiveMiner.js","components/AlphaMiner.js","components/HeuristicMiner.js","components/Frequency.js","components/Meanduration.js","components/Traceduration.js","components/Activityduration.js","components/Conceptname.js","components/Info.js","components/Converttocsv.js","components/Converttoxes.js","components/View.js","components/Replayresults.js","components/Alignments.js","components/Signup.js","components/Login.js","components/Middle.js","components/App.js","index.js"],"names":["Footer","FirsTime","state","fileforupload","userfiles","allfiles","file","selectedfile","filename","onFileChange","event","target","files","name","includes","document","getElementById","innerText","StatechangenotFile","setState","StatechangeFileDone","data","FormData","append","props","folder","fetch","window","globalConfig","siteName","process","method","body","then","response","json","undefined","error","catch","sendData","parentCallback","this","className","id","type","onChange","onClick","Component","CsvElements","headeroptions","str","html","elementdictionaries","i","String","split","push","value","toString","selectheaderoptions","csvlist","buildminer","trans","places","arcs","allfound","elements","allelements","y","max","x","hmapping","left","right","removet","parseInt","j","label","sourcePosition","position","draggable","style","width","height","targetPosition","counter","source","arrowHeadType","string","replace","trim","InductiveMiner","image","imageHash","Date","now","nettransitions","netplaces","netarcs","isok","fitness","precision","generalization","simplicity","csvheaders","StateImage","seperator","length","api_error","log_fitness","evaluation_result","converttostate","minerhtml","errorstring","title","status","color","button","Close","borderRadius","paddingTop","borderColor","backgroundColor","AlphaMiner","HeuristicMiner","Frequency","src","Meanduration","myhtml","Traceduration","Activityduration","Conceptname","buildevent","dictionary","noevents","number","eventhtml","htmlhead","htmlbody","thead","totalevents","trkey","trkey2","trkey3","toFixed","tablekey","buildactivities","notraces","buildvariants","variant","buildtrace","replaceAll","Info","done","statistics","tracelist","startactivities","endactivities","variants","Infobuild","events","starteventhmtl","endeventhmtl","tracelisthtml","variantshml","Converttocsv","csvname","url","location","href","dontconvert","Converttoxes","caseconcept","start_timestamp","timestamp","conceptname","xesname","builddf","resultsno","header","tempinside","dataframe","key","headercounter","headerkey","headersaresok","Object","entries","View","view","dict","changeresults","obj","trkey4","trkey5","trkey7","trkey8","trkey9","trkey10","trkey11","trace_is_fit","trace_fitness","activated_transitions","reached_marking","enabled_transitions_in_marking","transitions_with_problems","missing_tokens","consumed_tokens","remaining_tokens","produced_tokens","Replayresults","selectedalgo","Getalgo","htmltable","Alignments","returnhtml","buildsinglealignemnt","alignment","step_list","trace_steps","model_steps","max_label_length","rethtml","rethtml2","dividerhtml","step","splitstep","insidesplitstep","spaces_to_add","devkey","spaces_to_addmodel","devkey2","finalhtml","ValidateEmail","input","match","Signup","isvalid","mail","signupbtn","querySelector","classList","remove","add","textContent","return","icon","faMailBulk","onBlur","changemail","placeholder","faLock","changepass","Login","loginuser","signup","loginbtnClick","success","redirect","callbackFunction","path","component","Middle","specific","reload","logout","Cookies","GetFileNames","hasfiles","filenames","Getheadersep","Getheaders","dataheaderslist","clear","childData","callbackFunctionUser","changecolor","all","getElementsByClassName","innerHTML","sidetable","Boolean","map","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.d86384f0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Footer() {\r\n//  const year = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      {/* <p>Copyright Uniwa Thesis ⓒ {year}</p> */}\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';  \r\n\r\nclass FirsTime extends Component { \r\n       \r\n      state = {\r\n        fileforupload:true          \r\n      } \r\n\r\n      userfiles = {   //all files dictionary\r\n        allfiles:[]\r\n      }\r\n\r\n      file = {      //selected file\r\n        selectedfile:null,\r\n        filename:null\r\n      } \r\n      onFileChange = event => {  \r\n        if((event.target.files[0].name.includes('.xes'))||(event.target.files[0].name.includes('.csv'))){ //save only xes or csv files on state\r\n              document.getElementById('selectedfilename').innerText=(event.target.files[0].name);\r\n              this.file.selectedfile = event.target.files[0] ;\r\n              this.file.filename=event.target.files[0].name; \r\n        }\r\n     };  \r\n     StatechangenotFile = event => {    \r\n      this.setState({ fileforupload: false});   \r\n     }\r\n     StatechangeFileDone = event => {   \r\n        if(this.file.filename!==null){\r\n           //       this.sendData();\r\n                  \r\n                  if (this.file.filename.includes('xes')){    //value of xes files in dictionary is true else false\r\n                  this.userfiles.allfiles[this.file.filename]=true\r\n                  }else{\r\n                  this.userfiles.allfiles[this.file.filename]=false\r\n                  }\r\n \r\n                //  this.setState({ fileforupload: false});  //change state when file is uploaded\r\n                  const data = new FormData(); \r\n                  data.append('file', this.file.selectedfile); \r\n                  data.append('filename',this.file.filename);   \r\n                  data.append('folder',this.props.folder);\r\n                  fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/savefile', {\r\n                  method: 'POST',\r\n                  body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => { \r\n                    if (data[0].error===undefined){ \r\n                      this.setState({ fileforupload: false}); \r\n                    }\r\n                    else{\r\n                      this.file.filename=null;\r\n                      this.file.selectedfile=null;\r\n                      document.getElementById('selectedfilename').innerText=(\"500 Internal Server Error\");\r\n                    }\r\n                  }).catch((error) => {\r\n                    this.file.filename=null;\r\n                    this.file.selectedfile=null;\r\n                    document.getElementById('selectedfilename').innerText=(\"500 Internal Server Error\");\r\n                  });\r\n                 \r\n                  // this.file.filename=null;\r\n                  // this.file.selectedfile=null;\r\n                }\r\n     }\r\n\r\n     \r\n     sendData = () => {\r\n        this.props.parentCallback(this.file.filename);\r\n     }\r\n      render() {        \r\n        if (this.state.fileforupload === true){         // shows the file upload box\r\n          var filename='Choose a xes or csv file or drag it here.';  \r\n          return (\r\n            <div> \r\n                    <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">Upload File</label>\r\n                        <div className=\"preview-zone hidden\">\r\n                        <div className=\"box box-solid\">\r\n                          \r\n                          <div className=\"box-body\"></div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"dropzone-wrapper\">\r\n                        <div className=\"dropzone-desc\">\r\n                          <i className=\"glyphicon glyphicon-download-alt\"></i> \r\n                          <p id='selectedfilename'>{filename}</p>\r\n                        </div> \r\n                        <input className=\"uploadinput dropzone\"    type=\"file\" name=\"file\"  onChange={this.onFileChange}/> \r\n                        </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                      <button type=\"submit\" className=\"btn btn-primary pull-right\">Upload</button>\r\n                      </div>\r\n                    </div> */}\r\n                    <button type=\"submit\"  onClick={this.StatechangeFileDone} className=\"btn firstimebtn btn-primary pull-right\">Complete</button>\r\n                    </div>    \r\n                  \r\n            </div>\r\n          );\r\n        }\r\n        else{   \r\n          this.sendData();\r\n          this.file.filename=null;\r\n          this.file.selectedfile=null;\r\n        return(<div > </div>)\r\n        }\r\n    }\r\n            \r\n            \r\n  }//CLASS END  \r\n \r\n   \r\n  \r\n    \r\nexport default FirsTime;\r\n","import React, { Component } from 'react'; \r\nclass CsvElements extends Component { \r\n      //dropdown with the columns the user wants to change\r\n    render() {     \r\n                var headeroptions=[]; \r\n                headeroptions =  selectheaderoptions(this.props.data.csvlist); \r\n                return(\r\n                    <div>\r\n                        <p key='caseconceptname_1'><span>Choose an element for case:concept:name</span></p>\r\n                        <select className='csvheaders' id='caseconcept'>{headeroptions}</select>\r\n                        <p key='conceptname_1'><span>Choose an element for concept:name</span></p>\r\n                        <select className='csvheaders' id='conceptname'>{headeroptions}</select> \r\n                        <p key='startevent_1'><span>Choose an element for start_timestamp</span></p>\r\n                        <select className='csvheaders' id='start_timestamp'>{headeroptions}</select>\r\n                        <p key='time:timestamp_1'><span>Choose an element for time:timestamp</span></p>\r\n                        <select className='csvheaders' id='timestamp'>{headeroptions}</select>\r\n                      \r\n                    </div>\r\n                );\r\n    }\r\n}\r\nfunction selectheaderoptions(str){    //fill the dropdown with the headers from API response\r\n    var html=[]; \r\n    var elementdictionaries=[];\r\n    elementdictionaries=String(str).split(',');  \r\n    for(var i in elementdictionaries){\r\n      html.push(<option key={i} value={elementdictionaries[i].toString()}>{elementdictionaries[i].toString()}</option>)\r\n    } \r\n   \r\n    return html;\r\n  }\r\n\r\nexport default CsvElements;\r\n","import React, { Component } from 'react'; \r\nimport CsvElements from \"./CsvElements.js\" \r\nimport ReactFlow from 'react-flow-renderer';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactJsAlert from \"reactjs-alert\";\r\n\r\nclass InductiveMiner extends Component { \r\n    image ={\r\n        image: null, //pm4py image\r\n        imageHash: Date.now(), //time send\r\n        nettransitions: [], //petrinet transitions\r\n        netplaces:[],   //petrinet places\r\n        netarcs:[]  //petrinet arcs\r\n    }\r\n    state ={\r\n        isok : false,//in case of csv file until the user selects headers and presses yes\r\n        image:false,    //if API returns pm4py static image\r\n        fitness: null, //fitness\r\n        precision: null,//precision\r\n        generalization:null,//generalization\r\n        simplicity:null,//simplity\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,    // in case of Csv files \r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData(); \r\n        data.append('filename',this.props.data);  \r\n        data.append('sitealgo', '2'); //the same endpoint different algorithm\r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n                    if(this.props.value.seperator.length>0){\r\n                        data.append('seperator',this.props.value.seperator);\r\n                    }\r\n                    if (document.getElementById('caseconcept')!==null){\r\n                        data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n                    }\r\n                    if (document.getElementById('startevent')!==null){\r\n                        data.append('startevent',document.getElementById('startevent').value);  \r\n                    }\r\n                    if (document.getElementById('timestamp')!==null){\r\n                        data.append('timestamp',document.getElementById('timestamp').value);  \r\n                    }\r\n                    if (document.getElementById('conceptname')!==null){\r\n                        data.append('conceptname',document.getElementById('conceptname').value);  \r\n                    }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getimage', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {\r\n                    if (data[0].api_error===undefined){\r\n                        this.image.nettransitions=data[0].nettransitions;   \r\n                        this.image.netplaces=data[0].netplaces;  \r\n                        this.image.netarcs=data[0].netarcs;\r\n                                 this.image.image=data[0].image; \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({ error:'',image: true,fitness:data[0].log_fitness,precision:data[0].evaluation_result,generalization:data[0].generalization,simplicity:data[0].simplicity}); \r\n                               \r\n                    }\r\n                    else{\r\n                        this.setState({error:data[0].api_error}); \r\n                    }\r\n                  }); \r\n        \r\n       }\r\n    //    StateImageCsv = () => {\r\n    //     const data = new FormData(); \r\n    //     data.append('filename',this.props.data);    \r\n    //     data.append('sitealgo', '2');  \r\n    //     var caseconcept = document.getElementById('caseconcept').value; \r\n    //    var start_timestamp = document.getElementById('start_timestamp').value;  \r\n    //    var timestamp = document.getElementById('timestamp').value; \r\n    //    var conceptname = document.getElementById('conceptname').value;   \r\n    //    data.append('caseconcept',caseconcept);  \r\n    //    data.append('startevent',start_timestamp);  \r\n    //    data.append('timestamp',timestamp);  \r\n    //    data.append('conceptname',conceptname);   \r\n    //    data.append('seperator',this.props.value.seperator);\r\n    //    data.append('folder',this.props.folder);\r\n    //     fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getimagecsv', {\r\n    //                                                     method: 'POST',\r\n    //                                                     body: data,\r\n    //               }).then(response => (response.json()))\r\n    //               .then(data => {\r\n    //                              if (data[0].error===undefined){\r\n    //                                 this.image.nettransitions=data[0].nettransitions;   \r\n    //                                 this.image.netplaces=data[0].netplaces;  \r\n    //                                 this.image.netarcs=data[0].netarcs; \r\n    //                                 this.image.image=data[0].image; \r\n    //                                 this.image.imageHash= Date.now();\r\n    //                                 this.setState({ image: true,fitness:data[0].log_fitness,precision:data[0].evaluation_result,generalization:data[0].generalization,simplicity:data[0].simplicity}); \r\n                               \r\n    //                              }  \r\n    //               }); \r\n        \r\n    //    }\r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n            var minerhtml;\r\n            if (this.props.data.includes(\".xes\")){ \r\n             if(this.state.image===false){\r\n                if(this.state.error.length>0){\r\n                    var errorstring=this.state.error.toString();\r\n                    return(<div> \r\n                  \r\n                            <ReactJsAlert\r\n                                type=\"warning\"   // success, warning, error, info\r\n                                title={errorstring}   // title you want to display\r\n                                status={true}   // true or false \r\n                                color=\"#FF0000\"  \r\n                                button=\"Try Again\"\r\n                                Close={() => this.setState({ status: false })}   // callback method for hide\r\n                            />\r\n                    </div>);\r\n                }\r\n                else{\r\n                    this.StateImage(); \r\n             \r\n                    return(<div>\r\n                        <Loader\r\n                                               type=\"ThreeDots\"\r\n                                               color=\"#dc905e\"\r\n                                               height={100}\r\n                                               width={100} \r\n                                               />\r\n                                 <ReactFlow  elements={minerhtml}  />\r\n                    </div>)\r\n                }\r\n                 \r\n             }  \r\n             else{\r\n                 minerhtml=buildminer(this.image.nettransitions,this.image.netplaces,this.image.netarcs);//builds petrinet\r\n              //evaluation table and petrinet\r\n                 return(<div>\r\n                     {/* <img alt=\"inductive\" className='imageclass' src={`${this.image.image}?${this.image.imageHash}`} />  */}\r\n                     <table><tbody><tr>\r\n                                        <td>\r\n                                        Log Fitness\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.fitness}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Precision\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.precision}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Generalization\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.generalization}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Simplicity\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.simplicity}\r\n                                        </td>\r\n                                    </tr></tbody></table> \r\n                     <div  className=\"move50\" style={{ height: 1001 }}>\r\n                     <ReactFlow elements={minerhtml} />\r\n                     </div>\r\n                 \r\n         </div>)\r\n             }\r\n            }\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                    if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> \r\n                                </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if(this.state.image===false){\r\n                            if(this.state.error.length>0){\r\n                                  errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"  \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                        \r\n                                return(<div> \r\n                                            <Loader\r\n                                                type=\"ThreeDots\"\r\n                                                color=\"#dc905e\"\r\n                                                height={100}\r\n                                                width={100} \r\n                                                />\r\n                                            <ReactFlow  elements={minerhtml}  />\r\n                                </div>)\r\n                            }\r\n                           \r\n                        }  \r\n                        else{\r\n                            minerhtml=buildminer(this.image.nettransitions,this.image.netplaces,this.image.netarcs);\r\n                         \r\n                            return(<div> \r\n                                <table>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Fitness\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.fitness}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Precision\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.precision}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Generalization\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.generalization}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Simplicity\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.simplicity}\r\n                                        </td>\r\n                                    </tr>\r\n                                </table> \r\n                                <div   className=\"move50\"style={{ height: 1001 }}>\r\n                                <ReactFlow  elements={minerhtml}  />\r\n                                </div>\r\n                               \r\n                    </div>)\r\n                        }\r\n                       \r\n                       \r\n                    }\r\n                       \r\n                       \r\n                    }\r\n                }\r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\n     \r\nfunction buildminer(trans,places,arcs){    \r\n    var allfound=false;\r\n    var  elements=[]; \r\n    /*initialize*/\r\n    var allelements={};\r\n    var y={};\r\n    var max=0;\r\n    for (var x in trans)\r\n    {   \r\n        allelements[hmapping(trans[x])]=\"transition\";\r\n    }  \r\n    for ( x in places)\r\n    {  \r\n        if(hmapping(places[x])==='start'){ \r\n            allelements[hmapping(places[x])]=\"0~places\";\r\n        }else{\r\n            allelements[hmapping(places[x])]=\"places\";\r\n        } \r\n    }\r\n     \r\n    // /*find levels*/\r\n       while(allfound===false)\r\n       {\r\n          for ( x in arcs){ \r\n              var left=arcs[x].split('->')[0];\r\n             var right=arcs[x].split('->')[1]; \r\n            left=hmapping(left);\r\n             right=hmapping(right);\r\n             left=removet(left);\r\n             right=removet(right);  \r\n              if((allelements[left].includes('~')) && (allelements[right].includes('~')===false )) { \r\n                 \r\n                  allelements[right]=(parseInt(allelements[left].split('~')[0])+1).toString()+'~'+allelements[right];\r\n              }\r\n          }\r\n           \r\n         allfound=true;\r\n         /*check if a lvl is missing*/\r\n         for(x in allelements){ \r\n             if(!allelements[x].includes('~')){\r\n                 allfound=false;\r\n             }\r\n         }\r\n       }\r\n      \r\n    //   /* find max lvl*/\r\n        for(x in allelements){\r\n          if (allelements[x].split('~')[0] > max ){\r\n              max=parseInt(allelements[x].split('~')[0]);\r\n          }\r\n        } \r\n      \r\n       for (var i=0;i<=max;i++){\r\n           y[i]=0;\r\n      }\r\n      var name={};\r\n      var j=0;\r\n      for(x in allelements){\r\n         name[x]=j;\r\n         j++;\r\n      }\r\n\r\n        for(x in allelements){\r\n                             if(allelements[x].split('~')[1]===\"places\"){ \r\n                                 if (x==='end'){\r\n                                     elements.push({id: name[x],type: 'input',data: { label: '' },sourcePosition:'left',position: { x: (max)*180, y: 0 },draggable: true,style:{width: '50px',height: '50px','borderRadius': '50%', 'paddingTop': '17px','borderColor':'black','backgroundColor': 'orange'} });\r\n                                 }\r\n                                 else if (x==='start'){\r\n                                     elements.push({id:  name[x],type: 'input',data: { label: '' },sourcePosition:'right',position: { x: 1, y: 0 },draggable: true,style:{width: '50px',height: '50px','borderRadius': '50%', 'paddingTop': '17px','borderColor':'black','backgroundColor': 'green'} });\r\n                               \r\n                                 }\r\n                                 else{ \r\n                                     elements.push({id:  name[x],data: { label: ''  },sourcePosition:'right',targetPosition:'left',position: { x: parseInt(allelements[x].split('~')[0])*150, y: y[allelements[x].split('~')[0]] },draggable: true,style:{width: '50px',height: '50px','borderRadius': '50%', 'paddingTop': '17px','borderColor':'black','backgroundColor': 'white'} });\r\n                                     y[allelements[x].split('~')[0]]+=100;\r\n                                 }                            \r\n                             }\r\n                             else{\r\n                                 if (x.includes('hid')){\r\n                                    \r\n                                     elements.push({ id:name[x],    data: { label:''  },sourcePosition:'right',targetPosition:'left', position: { x: parseInt(allelements[x].split('~')[0])*150, y:  y[allelements[x].split('~')[0]]  },style:{'width': '108px','backgroundColor': 'black'}});\r\n                              \r\n                                 }\r\n                                 else{\r\n                                   \r\n                                     elements.push({ id: name[x],    data: { label:x.toString()  },sourcePosition:'right',targetPosition:'left',position: { x: parseInt(allelements[x].split('~')[0])*150, y:  y[allelements[x].split('~')[0]]  },style:{'width': '108px'}});\r\n                              \r\n                                 }\r\n                                  y[allelements[x].split('~')[0]]+=100;\r\n                             }\r\n       }\r\n       var counter=0;\r\n    //   /* draw lines */\r\n       for ( x in arcs){ \r\n\r\n         left=arcs[x].split('->')[0];\r\n         right=arcs[x].split('->')[1]; \r\n     \r\n      \r\n         left=hmapping(left);\r\n         right=hmapping(right);\r\n         left=removet(left);\r\n         right=removet(right);   \r\n         elements.push({ id:counter, source:name[left] , target: name[right],arrowHeadType:'arrowclosed' });  \r\n         counter+=1;\r\n     }\r\n\r\n    return elements;\r\n} \r\n\r\n  function hmapping(string){\r\n      if (string.includes('source'))\r\n      {\r\n          return 'start';\r\n      } \r\n      if (string.includes('sink'))\r\n      {\r\n          return 'end';\r\n      } \r\n      return string;\r\n  }\r\n\r\n  function removet(string){\r\n    string=string.replace('(p)','');\r\n    string=string.replace('(t)','');  \r\n    return string.trim();\r\n}\r\n \r\n     \r\n    \r\nexport default InductiveMiner;\r\n","import React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport ReactFlow from 'react-flow-renderer';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\"; \r\nimport ReactJsAlert from \"reactjs-alert\";\r\n\r\nclass AlphaMiner extends Component { \r\n    \r\n    image ={\r\n        image: null,//pm4py image\r\n        imageHash: Date.now(),//time send\r\n        nettransitions: [], //petrinet transitions\r\n        netplaces:[],   //petrinet places\r\n        netarcs:[]  //petrinet arcs\r\n    }\r\n    state ={\r\n        isok : false, //in case of csv file until the user selects headers and presses yes\r\n        image:false,//if API returns pm4py static image\r\n        fitness: null, //fitness\r\n        precision: null,//precision\r\n        generalization:null,//generalization\r\n        simplicity:null,//simplity\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData(); \r\n        data.append('filename',this.props.data);  \r\n        data.append('sitealgo', '1'); //the same endpoint different algorithm \r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n            if(this.props.value.seperator.length>0){\r\n                data.append('seperator',this.props.value.seperator);\r\n            }\r\n            if (document.getElementById('caseconcept')!==null){\r\n                data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n            }\r\n            if (document.getElementById('startevent')!==null){\r\n                data.append('startevent',document.getElementById('startevent').value);  \r\n            }\r\n            if (document.getElementById('timestamp')!==null){\r\n                data.append('timestamp',document.getElementById('timestamp').value);  \r\n            }\r\n            if (document.getElementById('conceptname')!==null){\r\n                data.append('conceptname',document.getElementById('conceptname').value);  \r\n            }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getimage', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {\r\n                                if (data[0].api_error===undefined){   \r\n                                 this.image.nettransitions=data[0].nettransitions;   \r\n                                 this.image.netplaces=data[0].netplaces;  \r\n                                 this.image.netarcs=data[0].netarcs; \r\n                                 this.image.image=data[0].image; \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({ error:'',image: true,fitness:data[0].log_fitness,precision:data[0].evaluation_result,generalization:data[0].generalization,simplicity:data[0].simplicity}); \r\n                                }\r\n                                else{\r\n                                    this.setState({error:data[0].api_error}); \r\n                                }\r\n                  }); \r\n        \r\n       }\r\n\r\n       \r\n    //    StateImageCsv = () => {\r\n    //     const data = new FormData(); \r\n    //     data.append('filename',this.props.data);    \r\n    //     data.append('sitealgo', '1');  \r\n    //     var caseconcept = document.getElementById('caseconcept').value; \r\n    //    var start_timestamp = document.getElementById('start_timestamp').value;  \r\n    //    var timestamp = document.getElementById('timestamp').value; \r\n    //    var conceptname = document.getElementById('conceptname').value;   \r\n    //    data.append('caseconcept',caseconcept);  \r\n    //    data.append('startevent',start_timestamp);  \r\n    //    data.append('timestamp',timestamp);  \r\n    //    data.append('conceptname',conceptname);   \r\n    //    data.append('seperator',this.props.value.seperator);\r\n    //    data.append('folder',this.props.folder);\r\n    //     fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getimagecsv', {\r\n    //                                                     method: 'POST',\r\n    //                                                     body: data,\r\n    //               }).then(response => (response.json()))\r\n    //               .then(data => { \r\n    //                              if (data[0].error===undefined){\r\n    //                                 this.image.nettransitions=data[0].nettransitions;   \r\n    //                                 this.image.netplaces=data[0].netplaces;  \r\n    //                                 this.image.netarcs=data[0].netarcs; \r\n    //                                 this.image.image=data[0].image; \r\n    //                                 this.image.imageHash= Date.now();\r\n    //                                 this.setState({ image: true,fitness:data[0].log_fitness,precision:data[0].evaluation_result,generalization:data[0].generalization,simplicity:data[0].simplicity}); \r\n    //                             }  \r\n    //               }); \r\n        \r\n    //    }\r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n               var minerhtml;\r\n               if (this.props.data.includes(\".xes\")){ \r\n                 \r\n                        if(this.state.image===false){\r\n                            if(this.state.error.length>0){\r\n                                var errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"  \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                        \r\n                                return(<div> \r\n                                     <Loader\r\n                                    type=\"ThreeDots\"\r\n                                    color=\"#dc905e\"\r\n                                    height={100}\r\n                                    width={100} \r\n                                    />\r\n                                            <ReactFlow  elements={minerhtml}  />\r\n                                </div>)\r\n                            }\r\n                            \r\n                        }  \r\n                        else{\r\n                            minerhtml=buildminer(this.image.nettransitions,this.image.netplaces,this.image.netarcs);//builds petrinet\r\n                         //evaluation table and petrinet\r\n                            return(<div>\r\n                                {/* <img alt=\"alphaminer\" className='imageclass' src={`${this.image.image}?${this.image.imageHash}`} />  */}\r\n                                <table>\r\n                                   <tbody><tr>\r\n                                        <td>\r\n                                        Log Fitness\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.fitness}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Precision\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.precision}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Generalization\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.generalization}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Simplicity\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.simplicity}\r\n                                        </td>\r\n                                    </tr></tbody></table> \r\n                                <div   className=\"move50\"style={{ height: 1001 }}>\r\n                                <ReactFlow  elements={minerhtml}  />\r\n                                </div>\r\n                               \r\n                    </div>)\r\n                        }\r\n               }\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                    if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if(this.state.image===false){\r\n                            if(this.state.error.length>0){\r\n                                  errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\" \r\n                                             button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                        \r\n                                return(<div> \r\n                                     <Loader\r\n                                    type=\"ThreeDots\"\r\n                                    color=\"#dc905e\"\r\n                                    height={100}\r\n                                    width={100} \r\n                                    />\r\n                                            <ReactFlow  elements={minerhtml}  />\r\n                                </div>)\r\n                            }\r\n                            \r\n                        }  \r\n                        else{\r\n                            minerhtml=buildminer(this.image.nettransitions,this.image.netplaces,this.image.netarcs);\r\n                         \r\n                            return(<div> \r\n                               <table>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Fitness\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.fitness}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Precision\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.precision}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Generalization\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.generalization}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Simplicity\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.simplicity}\r\n                                        </td>\r\n                                    </tr>\r\n                                </table> \r\n                                <div   className=\"move50\"style={{ height: 1001 }}>\r\n                                <ReactFlow  elements={minerhtml}  />\r\n                                </div>\r\n                               \r\n                    </div>)\r\n                        }\r\n                       \r\n                       \r\n                    }\r\n                }\r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\nfunction buildminer(trans,places,arcs){    \r\n    var allfound=false;\r\n    var  elements=[]; \r\n    /*initialize*/\r\n    var allelements={};\r\n    var y={};\r\n    var max=0;\r\n    for (var x in trans)\r\n    {   \r\n        allelements[hmapping(trans[x])]=\"transition\";\r\n    }  \r\n    for ( x in places)\r\n    {  \r\n        if(hmapping(places[x])==='start'){ \r\n            allelements[hmapping(places[x])]=\"0~places\";\r\n        }else{\r\n            allelements[hmapping(places[x])]=\"places\";\r\n        } \r\n    }\r\n    /*find levels*/\r\n      while(allfound===false)\r\n      {\r\n        for ( x in arcs){ \r\n            var left=arcs[x].split('->')[0];\r\n            var right=arcs[x].split('->')[1]; \r\n            left=hmapping(left);\r\n            right=hmapping(right);\r\n            left=removet(left);\r\n            right=removet(right);  \r\n             if((allelements[left].includes('~')) && (allelements[right].includes('~')===false )) { \r\n                 \r\n                 allelements[right]=(parseInt(allelements[left].split('~')[0])+1).toString()+'~'+allelements[right];\r\n             }\r\n        }\r\n\r\n        allfound=true;\r\n        /*check if a lvl is missing*/\r\n        for(x in allelements){\r\n            \r\n            if(!allelements[x].includes('~')){\r\n                allfound=false;\r\n            }\r\n        }\r\n      }\r\n      \r\n      /* find max lvl*/\r\n      for(x in allelements){\r\n        if (allelements[x].split('~')[0] > max ){\r\n            max=parseInt(allelements[x].split('~')[0]);\r\n        }\r\n      } \r\n      \r\n      for (var i=0;i<=max;i++){\r\n          y[i]=0;\r\n      }\r\n      var name={};\r\n      var j=0;\r\n      \r\n      for(x in allelements){\r\n        name[x]=j;\r\n        j++;\r\n      }\r\n\r\n       for(x in allelements){\r\n        \r\n                            if(allelements[x].split('~')[1]===\"places\"){ \r\n                                if (x==='end'){\r\n                                    elements.push({id: name[x],type: 'input',data: { label: '' },position: { x: (max)*180, y: 0 },sourcePosition:'left',draggable: true,style:{width: '50px',height: '50px',borderRadius: '50%', paddingTop: '17px',borderColor:'black',backgroundColor: 'orange'} });\r\n                                }\r\n                                else if (x==='start'){\r\n                                    elements.push({id:  name[x],type: 'input',data: { label: '' },position: { x: 1, y: 0 },sourcePosition:'right',draggable: true,style:{width: '50px',height: '50px',borderRadius: '50%', paddingTop: '17px',borderColor:'black',backgroundColor: 'green'} });\r\n                               \r\n                                }\r\n                                else{  \r\n                                    elements.push({id:  name[x],data: { label: ''  },sourcePosition:'right',targetPosition:'left',position: { x: parseInt(allelements[x].split('~')[0])*150, y: y[allelements[x].split('~')[0]] },style:{width: '50px',height: '50px',borderRadius: '50%', paddingTop: '17px',borderColor:'black',backgroundColor: 'white'} });\r\n                                    y[allelements[x].split('~')[0]]+=100;\r\n                                }                            \r\n                            }\r\n                            else{\r\n                                if (x.includes('hid')){\r\n                                    \r\n                                    elements.push({ id:name[x],    data: { label:''  },sourcePosition:'right',targetPosition:'left', position: { x: parseInt(allelements[x].split('~')[0])*150, y:  y[allelements[x].split('~')[0]]  },style:{width: '108px',backgroundColor: 'black'}});\r\n                              \r\n                                }\r\n                                else{\r\n                                   \r\n                                    elements.push({ id: name[x],    data: { label:x.toString()  },sourcePosition:'right',targetPosition:'left',position: { x: parseInt(allelements[x].split('~')[0])*150, y:  y[allelements[x].split('~')[0]]  },style:{width: '108px'}});\r\n                              \r\n                                }\r\n                                 y[allelements[x].split('~')[0]]+=100;\r\n                            }\r\n      }\r\n      var counter=0;\r\n      /* draw lines */ \r\n      for ( x in arcs){ \r\n       \r\n        left=arcs[x].split('->')[0];\r\n        right=arcs[x].split('->')[1]; \r\n        \r\n        left=hmapping(left);\r\n        right=hmapping(right);\r\n        left=removet(left);\r\n        right=removet(right);    \r\n        \r\n        elements.push({ id:counter, source:name[left] , target: name[right],arrowHeadType:'arrowclosed' });  \r\n        counter+=1;\r\n    }\r\n\r\n    return elements;\r\n} \r\n\r\n  function hmapping(string){\r\n      if (string.includes('source0'))\r\n      {\r\n          return 'start';\r\n      } \r\n      if (string.includes('sink0'))\r\n      {\r\n          return 'end';\r\n      } \r\n      return string;\r\n  }\r\n\r\n  function removet(string){\r\n    string=string.replace('(p)','');\r\n    string=string.replace('(t)','');  \r\n    return string.trim();\r\n}\r\n \r\n     \r\nexport default AlphaMiner;\r\n","import React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\" \r\nimport ReactFlow from 'react-flow-renderer';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactJsAlert from \"reactjs-alert\";\r\n\r\nclass HeuristicMiner extends Component { \r\n    image ={\r\n        image: null, //pm4py image\r\n        imageHash: Date.now(),//time send\r\n        nettransitions: [], //petrinet transitions\r\n        netplaces:[],   //petrinet places\r\n        netarcs:[]  //petrinet arcs\r\n    }\r\n    state ={\r\n        isok : false,//in case of csv file until the user selects headers and presses yes\r\n        image:false,//if API returns pm4py static image\r\n        fitness: null, //fitness\r\n        precision: null,//precision\r\n        generalization:null,//generalization\r\n        simplicity:null,//simplity\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData(); \r\n        data.append('filename',this.props.data);  \r\n        data.append('sitealgo', '3'); //the same endpoint different algorithm\r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n                        if(this.props.value.seperator.length>0){\r\n                            data.append('seperator',this.props.value.seperator);\r\n                        }\r\n                        if (document.getElementById('caseconcept')!==null){\r\n                            data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n                        }\r\n                        if (document.getElementById('startevent')!==null){\r\n                            data.append('startevent',document.getElementById('startevent').value);  \r\n                        }\r\n                        if (document.getElementById('timestamp')!==null){\r\n                            data.append('timestamp',document.getElementById('timestamp').value);  \r\n                        }\r\n                        if (document.getElementById('conceptname')!==null){\r\n                            data.append('conceptname',document.getElementById('conceptname').value);  \r\n                        }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getimage', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {\r\n                    if (data[0].api_error===undefined){\r\n                                 this.image.nettransitions=data[0].nettransitions;   \r\n                                 this.image.netplaces=data[0].netplaces;  \r\n                                 this.image.netarcs=data[0].netarcs;\r\n                                 \r\n                                 this.image.image=data[0].image; \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({ error:'',image: true,fitness:data[0].log_fitness,precision:data[0].evaluation_result,generalization:data[0].generalization,simplicity:data[0].simplicity}); \r\n                               \r\n                    }\r\n                    else{\r\n                        this.setState({error:data[0].api_error}); \r\n                    }\r\n                  }); \r\n        \r\n       } \r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n            var minerhtml;\r\n               if (this.props.data.includes(\".xes\")){ \r\n              \r\n                if(this.state.image===false){\r\n                    if(this.state.error.length>0){\r\n                        var errorstring=this.state.error.toString();\r\n                        return(<div> \r\n                      \r\n                                <ReactJsAlert\r\n                                    type=\"warning\"   // success, warning, error, info\r\n                                    title={errorstring}   // title you want to display\r\n                                    status={true}   // true or false \r\n                                    color=\"#FF0000\" \r\n                                     button=\"Try Again\"\r\n                                    Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                />\r\n                        </div>);\r\n                    }\r\n                    else{\r\n                        this.StateImage(); \r\n                \r\n                        return(<div>\r\n                             <Loader\r\n                                    type=\"ThreeDots\"\r\n                                    color=\"#dc905e\"\r\n                                    height={100}\r\n                                    width={100} \r\n                                    />\r\n                                    <ReactFlow  elements={minerhtml}  />\r\n                        </div>)\r\n                    }\r\n                   \r\n                }  \r\n                else{\r\n                    \r\n                    minerhtml=buildminer(this.image.nettransitions,this.image.netplaces,this.image.netarcs);//builds petrinet\r\n                    //evaluation table and petrinet\r\n                    return(<div>\r\n                        {/* <img alt=\"heuristic\" className='imageclass' src={`${this.image.image}?${this.image.imageHash}`} />  */}\r\n                        <table><tbody><tr>\r\n                                        <td>\r\n                                        Log Fitness\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.fitness}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Precision\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.precision}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Generalization\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.generalization}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Simplicity\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.simplicity}\r\n                                        </td>\r\n                                    </tr></tbody></table> \r\n                        <div className=\"move50\" style={{height: 1001 }}>\r\n                        <ReactFlow elements={minerhtml} />\r\n                        </div> \r\n            </div>) \r\n                }\r\n               }\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                                if (this.state.isok===false){  \r\n                                    return( \r\n                                        \r\n                                        <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                        <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                        )\r\n\r\n\r\n                                }\r\n                                else{\r\n                                if(this.state.image===false){\r\n                                    if (this.state.error.length>0){\r\n                                        errorstring=this.state.error.toString();\r\n                                        return(<div> \r\n                                      \r\n                                                <ReactJsAlert\r\n                                                    type=\"warning\"   // success, warning, error, info\r\n                                                    title={errorstring}   // title you want to display\r\n                                                    status={true}   // true or false \r\n                                                    color=\"#FF0000\" \r\n                                                     button=\"Try Again\"\r\n                                                    Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                                />\r\n                                        </div>);\r\n                                    }\r\n                                    else{\r\n                                        this.StateImage(); \r\n\r\n                                        return(<div> \r\n                                             <Loader\r\n                                                type=\"ThreeDots\"\r\n                                                color=\"#dc905e\"\r\n                                                height={100}\r\n                                                width={100} \r\n                                                \r\n                                                />\r\n                                                    <ReactFlow  elements={minerhtml}  />\r\n                                        </div>)\r\n                                    }\r\n                                   \r\n                                }  \r\n                                else{\r\n                                    minerhtml=buildminer(this.image.nettransitions,this.image.netplaces,this.image.netarcs);\r\n                                    \r\n                                    return(<div> \r\n                                       <table>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Fitness\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.fitness}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Log Precision\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.precision}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Generalization\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.generalization}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        Simplicity\r\n                                        </td>\r\n                                        <td>\r\n                                        {this.state.simplicity}\r\n                                        </td>\r\n                                    </tr>\r\n                                </table> \r\n                                        <div   className=\"move50\"style={{ height: 1001 }}>\r\n                                        <ReactFlow  elements={minerhtml}  />\r\n                                        </div>\r\n                                        \r\n                                </div>)\r\n                                }\r\n\r\n\r\n                                }\r\n                } \r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\n    \r\n    \r\nfunction buildminer(trans,places,arcs){    \r\n    var allfound=false;\r\n    var  elements=[]; \r\n    /*initialize*/\r\n    var allelements={};\r\n    var y={};\r\n    var max=0;\r\n    for (var x in trans)\r\n    {   \r\n        allelements[hmapping(trans[x])]=\"transition\";\r\n    }  \r\n    for ( x in places)\r\n    {  \r\n        if(hmapping(places[x])==='start'){ \r\n            allelements[hmapping(places[x])]=\"0~places\";\r\n        }else{\r\n            allelements[hmapping(places[x])]=\"places\";\r\n        } \r\n    }\r\n    /*find levels*/\r\n      while(allfound===false)\r\n      {\r\n        for ( x in arcs){ \r\n            var left=arcs[x].split('->')[0];\r\n            var right=arcs[x].split('->')[1]; \r\n            left=hmapping(left);\r\n            right=hmapping(right);\r\n            left=removet(left);\r\n            right=removet(right);  \r\n             if((allelements[left].includes('~')) && (allelements[right].includes('~')===false )) { \r\n                 \r\n                 allelements[right]=(parseInt(allelements[left].split('~')[0])+1).toString()+'~'+allelements[right];\r\n             }\r\n        }\r\n\r\n        allfound=true;\r\n        /*check if a lvl is missing*/\r\n        for(x in allelements){\r\n            \r\n            if(!allelements[x].includes('~')){\r\n                allfound=false;\r\n            }\r\n        }\r\n      }\r\n      \r\n      /* find max lvl*/\r\n      for(x in allelements){\r\n        if (allelements[x].split('~')[0] > max ){\r\n            max=parseInt(allelements[x].split('~')[0]);\r\n        }\r\n      } \r\n      \r\n      for (var i=0;i<=max;i++){\r\n          y[i]=0;\r\n      }\r\n      var name={};\r\n      var j=0;\r\n      for(x in allelements){\r\n        name[x]=j;\r\n        j++;\r\n      }\r\n\r\n       for(x in allelements){\r\n                            if(allelements[x].split('~')[1]===\"places\"){ \r\n                                if (x==='end'){\r\n                                    elements.push({id: name[x],type: 'input',data: { label: '' },sourcePosition:'left',position: { x: (max)*180, y: 0 },draggable: true,style:{width: '50px',height: '50px','borderRadius': '50%', 'paddingTop': '17px','borderColor':'black','backgroundColor': 'orange'} });\r\n                                }\r\n                                else if (x==='start'){\r\n                                    elements.push({id:  name[x],type: 'input',data: { label: '' },sourcePosition:'right',position: { x: 1, y: 0 },draggable: true,style:{width: '50px',height: '50px','borderRadius': '50%', 'paddingTop': '17px','borderColor':'black','backgroundColor': 'green'} });\r\n                               \r\n                                }\r\n                                else{ \r\n                                    elements.push({id:  name[x],data: { label: ''  },sourcePosition:'right',targetPosition:'left',position: { x: parseInt(allelements[x].split('~')[0])*150, y: y[allelements[x].split('~')[0]] },draggable: true,style:{width: '50px',height: '50px','borderRadius': '50%', 'paddingTop': '17px','borderColor':'black','backgroundColor': 'white'} });\r\n                                    y[allelements[x].split('~')[0]]+=100;\r\n                                }                            \r\n                            }\r\n                            else{\r\n                                if (x.includes('hid')){\r\n                                    \r\n                                    elements.push({ id:name[x],    data: { label:''  },sourcePosition:'right',targetPosition:'left', position: { x: parseInt(allelements[x].split('~')[0])*150, y:  y[allelements[x].split('~')[0]]  },style:{'width': '108px','backgroundColor': 'black'}});\r\n                              \r\n                                }\r\n                                else{\r\n                                   \r\n                                    elements.push({ id: name[x],    data: { label:x.toString()  },sourcePosition:'right',targetPosition:'left',position: { x: parseInt(allelements[x].split('~')[0])*150, y:  y[allelements[x].split('~')[0]]  },style:{'width': '108px'}});\r\n                              \r\n                                }\r\n                                 y[allelements[x].split('~')[0]]+=100;\r\n                            }\r\n      }\r\n      var counter=0;\r\n      /* draw lines */\r\n      for ( x in arcs){ \r\n\r\n        left=arcs[x].split('->')[0];\r\n        right=arcs[x].split('->')[1]; \r\n     \r\n      \r\n        left=hmapping(left);\r\n        right=hmapping(right);\r\n        left=removet(left);\r\n        right=removet(right);   \r\n        elements.push({ id:counter, source:name[left] , target: name[right],arrowHeadType:'arrowclosed' });  \r\n        counter+=1;\r\n    }\r\n\r\n    return elements;\r\n} \r\n\r\n  function hmapping(string){\r\n      if (string.includes('source0'))\r\n      {\r\n          return 'start';\r\n      } \r\n      if (string.includes('sink0'))\r\n      {\r\n          return 'end';\r\n      } \r\n      return string;\r\n  }\r\n\r\n  function removet(string){\r\n    string=string.replace('(p)','');\r\n    string=string.replace('(t)','');  \r\n    return string.trim();\r\n}\r\n \r\n     \r\nexport default HeuristicMiner;\r\n","\r\n\r\nimport React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport ReactJsAlert from \"reactjs-alert\";\r\n\r\nclass Frequency extends Component { \r\n    image ={\r\n        image: null, \r\n        imageHash: Date.now()\r\n    }\r\n    state ={\r\n        isok : false,\r\n        image:false,\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData(); \r\n        data.append('filename',this.props.data);   \r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n          if(this.props.value.seperator.length>0){\r\n              data.append('seperator',this.props.value.seperator);\r\n            }\r\n            if (document.getElementById('caseconcept')!==null){\r\n              data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n            }\r\n            if (document.getElementById('startevent')!==null){\r\n              data.append('startevent',document.getElementById('startevent').value);  \r\n            }\r\n            if (document.getElementById('timestamp')!==null){\r\n              data.append('timestamp',document.getElementById('timestamp').value);  \r\n            }\r\n            if (document.getElementById('conceptname')!==null){\r\n              data.append('conceptname',document.getElementById('conceptname').value);  \r\n            }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/graph', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {\r\n                    if (data[0].api_error===undefined){ \r\n                                 this.image.image=data[0].image; \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({error:'', image: true});\r\n                    }\r\n                    else{\r\n                        this.setState({error:data[0].api_error}); \r\n                    }\r\n                  }); \r\n        \r\n       }\r\n    //    StateImageCsv = () => {\r\n    //     const data = new FormData(); \r\n    //     data.append('filename',this.props.data);    \r\n    //     data.append('sitealgo', '1'); \r\n       \r\n    //     var caseconcept = document.getElementById('caseconcept').value; \r\n    //    var start_timestamp = document.getElementById('start_timestamp').value;  \r\n    //    var timestamp = document.getElementById('timestamp').value; \r\n    //    var conceptname = document.getElementById('conceptname').value;   \r\n    //    data.append('caseconcept',caseconcept);  \r\n    //    data.append('startevent',start_timestamp);  \r\n    //    data.append('timestamp',timestamp);  \r\n    //    data.append('conceptname',conceptname);   \r\n    //    data.append('seperator',this.props.value.seperator);\r\n    //    data.append('folder',this.props.folder);\r\n    //     fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getgraphcsv', {\r\n    //                                                     method: 'POST',\r\n    //                                                     body: data,\r\n    //               }).then(response => (response.json()))\r\n    //               .then(data => {\r\n    //                 if (data[0].error===undefined){\r\n    //                              this.image.image=data[0].image; \r\n    //                              this.image.imageHash= Date.now();\r\n    //                              this.setState({ image: true});\r\n    //                 }\r\n    //               }); \r\n        \r\n    //    }\r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n               if (this.props.data.includes(\".xes\")){ \r\n                \r\n                if(this.image.image==null){\r\n                    if(this.state.error.length>0){\r\n                        var errorstring=this.state.error.toString();\r\n                        return(<div> \r\n                      \r\n                                <ReactJsAlert\r\n                                    type=\"warning\"   // success, warning, error, info\r\n                                    title={errorstring}   // title you want to display\r\n                                    status={true}   // true or false \r\n                                    color=\"#FF0000\"  \r\n                                    button=\"Try Again\"\r\n                                    Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                />\r\n                        </div>);\r\n                    }\r\n                    else{ \r\n                        this.StateImage(); \r\n                        return(<div></div>)\r\n                    }\r\n                    \r\n              }\r\n              else{\r\n                  return(<div>\r\n                      {/* <img  alt='frequency' className='imageclass' src={`${this.image.image}?${this.image.imageHash}`} /> */}\r\n                      <iframe className=\"borderless\" title=\"activitydurationcsv\" src={this.image.image} width=\"1280\" height=\"720\"></iframe>\r\n                  </div>)\r\n              }\r\n               }\r\n\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                    if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if(this.image.image==null){\r\n                            if(this.state.error.length>0){\r\n                                errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"  \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{ \r\n                                this.StateImage(); \r\n                                return(<div></div>)\r\n                            }\r\n                        }\r\n                        else{\r\n                            return(<div>\r\n                                <iframe className=\"borderless\" title=\"activitydurationcsv\" src={this.image.image} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n                       \r\n                       \r\n                    }\r\n                }\r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\n    \r\n    \r\nexport default Frequency;\r\n"," \r\nimport React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\"; \r\n\r\nclass Meanduration extends Component { \r\n    image ={\r\n        image: null, \r\n        imageHash: Date.now()\r\n    }\r\n    state ={\r\n        isok : false,\r\n        image:false,\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData();  \r\n        data.append('filename',this.props.data);  \r\n        data.append('folder',this.props.folder); \r\n        if(this.props.data.includes('.csv')){  \r\n                        if(this.props.value.seperator.length>0){\r\n                            data.append('seperator',this.props.value.seperator);\r\n                        }\r\n                        if (document.getElementById('caseconcept')!==null){\r\n                            data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n                        }\r\n                        if (document.getElementById('startevent')!==null){\r\n                            data.append('startevent',document.getElementById('startevent').value);  \r\n                        }\r\n                        if (document.getElementById('timestamp')!==null){\r\n                            data.append('timestamp',document.getElementById('timestamp').value);  \r\n                        }\r\n                        if (document.getElementById('conceptname')!==null){\r\n                            data.append('conceptname',document.getElementById('conceptname').value);  \r\n                        }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/mean_durations', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {\r\n                 \r\n                    if (data[0].api_error===undefined){\r\n                                 this.image.image=data[0].image;  \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({ error:'',image: true});\r\n                    }\r\n                    else{\r\n                        this.setState({error:data[0].api_error}); \r\n                    }\r\n                  }); \r\n        \r\n       }\r\n    //    StateImageCsv = () => {\r\n    //     const data = new FormData(); \r\n    //     data.append('filename',this.props.data);    \r\n    //     data.append('sitealgo', '1'); \r\n    //     data.append('folder',this.props.folder);\r\n    //     var caseconcept = document.getElementById('caseconcept').value; \r\n    //    var start_timestamp = document.getElementById('start_timestamp').value;  \r\n    //    var timestamp = document.getElementById('timestamp').value; \r\n    //    var conceptname = document.getElementById('conceptname').value;   \r\n    //    data.append('caseconcept',caseconcept);  \r\n    //    data.append('startevent',start_timestamp);  \r\n    //    data.append('timestamp',timestamp);  \r\n    //    data.append('conceptname',conceptname);   \r\n    //    data.append('seperator',this.props.value.seperator);\r\n    //     fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/mean_durationscsv', {\r\n    //                                                     method: 'POST',\r\n    //                                                     body: data,\r\n    //               }).then(response => (response.json()))\r\n    //               .then(data => {\r\n    //                 if (data[0].error===undefined){\r\n    //                              this.image.image=data[0].image; \r\n    //                              this.image.imageHash= Date.now();\r\n    //                              this.setState({ image: true});\r\n    //                 }\r\n    //               }); \r\n        \r\n    //    }\r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n               if (this.props.data.includes(\".xes\")){ \r\n                \r\n                        if(this.state.image===false){\r\n                            \r\n                            if(this.state.error.length>0){\r\n                                var errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\" \r\n                                             button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                                return(<div> \r\n                                    <Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#dc905e\"\r\n                                   height={100}\r\n                                   width={100} \r\n                                   />\r\n                                         \r\n                               </div>)\r\n                            }\r\n                           \r\n                        } \r\n                        else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\" title=\"meandurationxes\" src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n                      \r\n               }\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                    if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if(this.image.image==null){\r\n                            \r\n                            if(this.state.error.length>0){\r\n                                errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"\r\n                                              button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                                return(<div> \r\n                                    <Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#dc905e\"\r\n                                   height={100}\r\n                                   width={100} \r\n                                   />\r\n                                         \r\n                               </div>)\r\n                            }\r\n                           \r\n                        }\r\n                        else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\" title=\"meandurationcsv\" src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n                       \r\n                       \r\n                    }\r\n                }\r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\n    \r\n    \r\nexport default Meanduration;\r\n"," \r\nimport React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\"; \r\n\r\nclass Traceduration extends Component { \r\n    image ={\r\n        image: null, \r\n        imageHash: Date.now()\r\n    }\r\n    state ={\r\n        isok : false,\r\n        image:false,\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData();  \r\n        data.append('filename',this.props.data);   \r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n                if(this.props.value.seperator.length>0){\r\n                    data.append('seperator',this.props.value.seperator);\r\n                }\r\n                if (document.getElementById('caseconcept')!==null){\r\n                    data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n                }\r\n                if (document.getElementById('startevent')!==null){\r\n                    data.append('startevent',document.getElementById('startevent').value);  \r\n                }\r\n                if (document.getElementById('timestamp')!==null){\r\n                    data.append('timestamp',document.getElementById('timestamp').value);  \r\n                }\r\n                if (document.getElementById('conceptname')!==null){\r\n                    data.append('conceptname',document.getElementById('conceptname').value);  \r\n                }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/trace_duration', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => { \r\n                    if (data[0].api_error===undefined){\r\n                                 this.image.image=data[0].image;  \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({ image: true});\r\n                    }else{\r\n                        this.setState({error:data[0].api_error}); \r\n                    }\r\n                  }); \r\n        \r\n       }\r\n    //    StateImageCsv = () => {\r\n    //     const data = new FormData(); \r\n    //     data.append('filename',this.props.data);    \r\n    //     data.append('sitealgo', '1'); \r\n    //     data.append('folder',this.props.folder);\r\n    //     var caseconcept = document.getElementById('caseconcept').value; \r\n    //    var start_timestamp = document.getElementById('start_timestamp').value;  \r\n    //    var timestamp = document.getElementById('timestamp').value; \r\n    //    var conceptname = document.getElementById('conceptname').value;   \r\n    //    data.append('caseconcept',caseconcept);  \r\n    //    data.append('startevent',start_timestamp);  \r\n    //    data.append('timestamp',timestamp);  \r\n    //    data.append('conceptname',conceptname);   \r\n    //    data.append('seperator',this.props.value.seperator);\r\n    //     fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/trace_durationcsv', {\r\n    //                                                     method: 'POST',\r\n    //                                                     body: data,\r\n    //               }).then(response => (response.json()))\r\n    //               .then(data => {\r\n    //                 if (data[0].error===undefined){\r\n    //                              this.image.image=data[0].image; \r\n    //                              this.image.imageHash= Date.now();\r\n    //                              this.setState({ image: true});\r\n    //                 }\r\n    //               }); \r\n        \r\n    //    }\r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n               if (this.props.data.includes(\".xes\")){ \r\n                \r\n                        if(this.state.image===false){\r\n\r\n                            if(this.state.error.length>0){\r\n                                var errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"  \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                                return(<div> \r\n                                    <Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#dc905e\"\r\n                                   height={100}\r\n                                   width={100} \r\n                                   />\r\n                                         \r\n                               </div>)\r\n                            }\r\n                            \r\n                        } \r\n                        else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\" title=\"tracedurationxes\" src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n                     \r\n               }\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                    if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if(this.image.image==null){\r\n                            if(this.state.error.length>0){\r\n                                errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\" \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                                return(<div> \r\n                                    <Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#dc905e\"\r\n                                   height={100}\r\n                                   width={100} \r\n                                   />\r\n                                         \r\n                               </div>)\r\n                            }\r\n                            \r\n                        }\r\n                        else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\" title=\"tracedurationcsv\" src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n                       \r\n                       \r\n                    }\r\n                }\r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\n    \r\n    \r\nexport default Traceduration;\r\n"," \r\nimport React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport ReactJsAlert from \"reactjs-alert\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\"; \r\n\r\nclass Activityduration extends Component { \r\n    image ={\r\n        image: null, \r\n        imageHash: Date.now()\r\n    }\r\n    state ={\r\n        isok : false,\r\n        image:false,\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData();  \r\n        data.append('filename',this.props.data);   \r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n            if(this.props.value.seperator.length>0){\r\n                data.append('seperator',this.props.value.seperator);\r\n            }\r\n            if (document.getElementById('caseconcept')!==null){\r\n                data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n            }\r\n            if (document.getElementById('startevent')!==null){\r\n                data.append('startevent',document.getElementById('startevent').value);  \r\n            }\r\n            if (document.getElementById('timestamp')!==null){\r\n                data.append('timestamp',document.getElementById('timestamp').value);  \r\n            }\r\n            if (document.getElementById('conceptname')!==null){\r\n                data.append('conceptname',document.getElementById('conceptname').value);  \r\n            }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/activity_duration', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {\r\n                 \r\n                    if (data[0].api_error===undefined){\r\n                                 this.image.image=data[0].image;  \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({error:'', image: true});\r\n                    }\r\n                    else{\r\n                        this.setState({error:data[0].api_error}); \r\n                    }\r\n                  }); \r\n        \r\n       } \r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n               if (this.props.data.includes(\".xes\")){ \r\n                \r\n                        if(this.state.image===false){\r\n                            if(this.state.error.length>0){\r\n                                var errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"  \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                                return(<div> \r\n                                    <Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#dc905e\"\r\n                                   height={100}\r\n                                   width={100} \r\n                                   />\r\n                                         \r\n                               </div>)\r\n                            }\r\n                            \r\n                        } \r\n                        else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\" title=\"activitydurationxes\" src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n               }\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                    if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if(this.image.image==null){\r\n                            if(this.state.error.length>0){\r\n                                  errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"  \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                                return(<div> \r\n                                    <Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#dc905e\"\r\n                                   height={100}\r\n                                   width={100} \r\n                                   />\r\n                                         \r\n                               </div>)\r\n                            }\r\n                            \r\n                        }\r\n                        else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\" title=\"activitydurationcsv\" src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n                       \r\n                       \r\n                    }\r\n                }\r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\n    \r\n    \r\nexport default Activityduration;\r\n"," \r\nimport React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\"; \r\n\r\nclass Conceptname extends Component { \r\n    image ={\r\n        image: null, \r\n        imageHash: Date.now()\r\n    }\r\n    state ={\r\n        isok : false,\r\n        image:false,\r\n        error:''\r\n    }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    StateImage = () => {\r\n        const data = new FormData();  \r\n        data.append('filename',this.props.data);   \r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n            if(this.props.value.seperator.length>0){\r\n                data.append('seperator',this.props.value.seperator);\r\n            }\r\n            if (document.getElementById('caseconcept')!==null){\r\n                data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n            }\r\n            if (document.getElementById('startevent')!==null){\r\n                data.append('startevent',document.getElementById('startevent').value);  \r\n            }\r\n            if (document.getElementById('timestamp')!==null){\r\n                data.append('timestamp',document.getElementById('timestamp').value);  \r\n            }\r\n            if (document.getElementById('conceptname')!==null){\r\n                data.append('conceptname',document.getElementById('conceptname').value);  \r\n            }\r\n        }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/conceptname', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {\r\n                 \r\n                    if (data[0].api_error===undefined){\r\n                                 this.image.image=data[0].image;  \r\n                                 this.image.imageHash= Date.now();\r\n                                 this.setState({ error:'',image: true});\r\n                    }\r\n                    else{\r\n                        this.setState({error:data[0].api_error}); \r\n                    }\r\n                  }); \r\n        \r\n       }\r\n       \r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n               if (this.props.data.includes(\".xes\")){ \r\n                \r\n                        if(this.state.image===false){\r\n                            if(this.state.error.length>0){\r\n                                var errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\"  \r\n                                            button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                    this.StateImage(); \r\n                                    return(<div> \r\n                                        <Loader\r\n                                    type=\"ThreeDots\"\r\n                                    color=\"#dc905e\"\r\n                                    height={100}\r\n                                    width={100} \r\n                                    />\r\n                                            \r\n                                </div>)\r\n                            }\r\n                            \r\n                        } else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\" title=\"conceptnamexes\" src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n               }\r\n               else if (this.props.data.includes(\".csv\")){  \r\n                    if (this.state.isok===false){  \r\n                            return( \r\n                               \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                                )\r\n                    \r\n                        \r\n                    }\r\n                    else{\r\n                        if(this.image.image==null){\r\n                            if(this.state.error.length>0){\r\n                                  errorstring=this.state.error.toString();\r\n                                return(<div> \r\n                              \r\n                                        <ReactJsAlert\r\n                                            type=\"warning\"   // success, warning, error, info\r\n                                            title={errorstring}   // title you want to display\r\n                                            status={true}   // true or false \r\n                                            color=\"#FF0000\" \r\n                                             button=\"Try Again\"\r\n                                            Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                        />\r\n                                </div>);\r\n                            }\r\n                            else{\r\n                                this.StateImage(); \r\n                                return(<div> \r\n                                    <Loader\r\n                                   type=\"ThreeDots\"\r\n                                   color=\"#dc905e\"\r\n                                   height={100}\r\n                                   width={100} \r\n                                   />\r\n                                         \r\n                               </div>)\r\n                            }\r\n                            \r\n                        }\r\n                        else{\r\n                            const myhtml=`${this.image.image}?${this.image.imageHash}`;\r\n                            return(<div>  \r\n                                <iframe className=\"borderless\"  title=\"conceptnamecsv\"  src={myhtml} width=\"1280\" height=\"720\"></iframe>\r\n                            </div>)\r\n                        }\r\n                       \r\n                       \r\n                    }\r\n                }\r\n                else{\r\n                    return(<div>Please select a file from list</div>)\r\n                } \r\n           }\r\n            \r\n} \r\n    \r\n    \r\nexport default Conceptname;\r\n","import React, { Component } from 'react'; \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\"; \r\nimport ReactJsAlert from \"reactjs-alert\"\r\nclass Info extends Component { \r\n    state={   \r\n        done:false, //changes to true when API returns results\r\n        error:''\r\n    }\r\n    statistics = {  //saves the results from API\r\n        notraces: null,\r\n        noevents: null, \r\n        tracelist:null,\r\n        startactivities:[],\r\n        endactivities:[],\r\n        variants:[]\r\n      }\r\n    Infobuild(){\r\n        \r\n      const data = new FormData(); \r\n      data.append('filename',this.props.data);  \r\n      data.append('folder',this.props.folder);\r\n      if(this.props.data.includes('.csv')){  \r\n                  if(this.props.value.seperator.length>0){\r\n                    data.append('seperator',this.props.value.seperator);\r\n                  }\r\n                  if (document.getElementById('caseconcept')!==null){\r\n                    data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n                  }\r\n                  if (document.getElementById('startevent')!==null){\r\n                    data.append('startevent',document.getElementById('startevent').value);  \r\n                  }\r\n                  if (document.getElementById('timestamp')!==null){\r\n                    data.append('timestamp',document.getElementById('timestamp').value);  \r\n                  }\r\n                  if (document.getElementById('conceptname')!==null){\r\n                    data.append('conceptname',document.getElementById('conceptname').value);  \r\n                  }\r\n    }\r\n      fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/statistics', {\r\n                                            method: 'POST',\r\n                                            body: data,\r\n      }).then(response => (response.json()))\r\n      .then(data => {  \r\n        if (data[0].api_error===undefined){ \r\n      this.statistics.notraces=data[0].notraces; \r\n \r\n      this.statistics.noevents=data[0].noevents;\r\n      this.statistics.tracelist=data[0].tracelist;\r\n      this.statistics.events=data[0].events;\r\n      this.statistics.startactivities=data[0].startactivities;\r\n      this.statistics.endactivities=data[0].endactivities;  \r\n      this.statistics.variants=data[0].variants;  \r\n      this.setState({error:''});\r\n      this.setState({done:true}); //when API returns results\r\n        }\r\n        else{\r\n          this.setState({done:true}); \r\n          this.setState({error:data[0].api_error});\r\n        }\r\n    });\r\n    }\r\n    // InfoCsv(){ \r\n    //   const data = new FormData(); \r\n    //   data.append('filename',this.props.data); //in case of csv changes columns \r\n    //   var caseconcept = document.getElementById('caseconcept').value; \r\n    //   var start_timestamp = document.getElementById('start_timestamp').value;  \r\n    //   var timestamp = document.getElementById('timestamp').value; \r\n    //   var conceptname = document.getElementById('conceptname').value;   \r\n    //   data.append('seperator',this.props.value.seperator);\r\n    //   data.append('caseconcept',caseconcept);  \r\n    //   data.append('startevent',start_timestamp);  \r\n    //   data.append('timestamp',timestamp);  \r\n    //   data.append('conceptname',conceptname);   \r\n    //   data.append('folder',this.props.folder);\r\n    //   fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/csvstatistics', {\r\n    //                                         method: 'POST',\r\n    //                                         body: data,\r\n    //   }).then(response => (response.json()))\r\n    //   .then(data => { \r\n    //     if (data[0].error===undefined){\r\n    //   this.statistics.notraces=data[0].notraces; \r\n    //   this.statistics.noevents=data[0].noevents;\r\n    //   this.statistics.tracelist=data[0].tracelist;\r\n    //   this.statistics.events=data[0].dictionary;\r\n    //   this.statistics.startactivities=data[0].startactivities;\r\n    //   this.statistics.endactivities=data[0].endactivities;  \r\n    //   this.setState({done:true}); //when API returns results\r\n    //     }\r\n    // });\r\n    // }\r\n    converttostate = event =>{  \r\n      \r\n      this.Infobuild();  \r\n    \r\n    }\r\n    render() {   \r\n                var eventhtml;\r\n                var starteventhmtl;\r\n                var endeventhmtl;\r\n                var tracelisthtml;\r\n                var variantshml;\r\n                if (this.props.data.includes(\".xes\")){  //until API returns response\r\n                      if (this.state.done===false){\r\n                          this.Infobuild();  //post request to API\r\n                          return(<div> <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"#dc905e\"\r\n                            height={100}\r\n                            width={100} \r\n                            /></div>) \r\n                      }\r\n                      else{\r\n                        if(this.state.error.length>0){\r\n                          var errorstring=this.state.error.toString();\r\n                          return(<div> \r\n                        \r\n                                  <ReactJsAlert\r\n                                      type=\"warning\"   // success, warning, error, info\r\n                                      title={errorstring}   // title you want to display\r\n                                      status={true}   // true or false \r\n                                      color=\"#FF0000\"\r\n                                      button=\"Try Again\"\r\n                                      Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                  />\r\n                          </div>);\r\n                        }\r\n                        else{\r\n                            eventhtml=buildevent(this.statistics.events,this.statistics.noevents,1); //builds events \r\n                            starteventhmtl = buildactivities(this.statistics.startactivities,this.statistics.notraces,2);//builds start  events\r\n                            endeventhmtl = buildactivities(this.statistics.endactivities,this.statistics.notraces,3);//builds end  events\r\n                            tracelisthtml = buildtrace(this.statistics.tracelist,4);\r\n                            variantshml = buildvariants(this.statistics.variants,5);\r\n                          return(\r\n                              <div>\r\n                                  <p key='notraces' className='leaveroom'>    Number of traces = { this.statistics.notraces}</p>\r\n                                  <p key='noevents' className='leaveroom'>    Number of events = { this.statistics.noevents}</p>  \r\n                                      {tracelisthtml }\r\n                                  <p key='events' className='leaveroom'>   Events:</p>\r\n                                      {eventhtml} \r\n                                  <p key='sevents' className='leaveroom'>   Start Events:</p>\r\n                                  {starteventhmtl} \r\n                                  <p  key='eevents'className='leaveroom'>   End Events:</p>\r\n                                      {endeventhmtl} \r\n                                  <p  key='vevents'className='leaveroom'>   Variant Events:</p>\r\n                                                {variantshml} \r\n                                                \r\n   \r\n                              </div>\r\n                          ); \r\n                        }\r\n                    }\r\n              }\r\n             else if (this.props.data.includes(\".csv\")){\r\n                      if (this.state.done===false){  //until API returns response\r\n                            return(  \r\n                                <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                                <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div> //in case of csv headers need to be provided\r\n                                ) \r\n                      }\r\n                      else{  \r\n                        if(this.state.error.length>0){\r\n                          errorstring=this.state.error.toString();\r\n                          return(<div> \r\n                        \r\n                                  <ReactJsAlert\r\n                                      type=\"warning\"   // success, warning, error, info\r\n                                      title={errorstring}   // title you want to display\r\n                                      status={true}   // true or false \r\n                                      color=\"#FF0000\"\r\n                                      button=\"Try Again\"\r\n                                      Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                  />\r\n                          </div>);\r\n                        }\r\n                        else{\r\n                            eventhtml=buildevent(this.statistics.events,this.statistics.noevents,1);\r\n                            starteventhmtl = buildactivities(this.statistics.startactivities,this.statistics.notraces,2);\r\n                            endeventhmtl = buildactivities(this.statistics.endactivities,this.statistics.notraces,3);\r\n                            tracelisthtml = buildtrace(this.statistics.tracelist,4);\r\n                            variantshml = buildvariants(this.statistics.variants,5);\r\n                            return(<div>\r\n                                          <div>\r\n                                                <p key='notraces' className='leaveroom'>    Number of traces = { this.statistics.notraces}</p>\r\n                                                <p key='noevents' className='leaveroom'>    Number of events = { this.statistics.noevents}</p>  \r\n                                                {tracelisthtml }\r\n                                                <p key='events' className='leaveroom'>   Events:</p>\r\n                                                {eventhtml} \r\n                                                <p key='sevents' className='leaveroom'>   Start Events:</p>\r\n                                                {starteventhmtl} \r\n                                                <p  key='eevents'className='leaveroom'>   End Events:</p>\r\n                                                {endeventhmtl} \r\n                                                <p  key='vevents'className='leaveroom'>   Variant Events:</p>\r\n                                                {variantshml} \r\n                                          </div>\r\n                            </div>) \r\n                      }\r\n                    }\r\n                \r\n              }\r\n              else{\r\n                return(<div>Please select a file from list</div>)\r\n            } \r\n    }\r\n}\r\n\r\nfunction buildevent(dictionary,noevents,number){ \r\n      \r\n    var  eventhtml=[];\r\n    var  htmlhead=[]; \r\n    var  htmlbody=[];\r\n    var  thead = 'stat_'+number;\r\n    var totalevents=0;\r\n    for (var i in dictionary) {   \r\n      totalevents+=parseInt(dictionary[i]);\r\n    }\r\n    htmlhead.push(<thead key={thead}><tr key={`${number}?${0}`}><td>Name</td><td>  Number of Events </td><td> Percentage </td></tr></thead>)\r\n    for ( i in dictionary) {   \r\n                  const trkey='tr_'+number+'_'+i;\r\n                  const trkey2 = trkey+'_2';\r\n                  const trkey3 = trkey+'_3'; \r\n                  htmlbody.push(<tr key={`${number}?${i}`}><td key={trkey}>{i}</td><td key={trkey2}>   {dictionary[i].toString()} </td><td key={trkey3} >  {(100*parseInt(dictionary[i])/parseInt(totalevents)).toFixed(3).toString()}  %</td></tr>)\r\n                  \r\n          } \r\n    const tablekey='table_'+number;\r\n        eventhtml.push(<table key={tablekey} className='resultstable'>{htmlhead}<tbody>{htmlbody}</tbody></table>)\r\n    return eventhtml; \r\n  }\r\n\r\n  function buildactivities(dictionary,notraces,number){ \r\n      \r\n    const  eventhtml=[];\r\n    const  htmlhead=[]; \r\n    const  htmlbody=[];\r\n    const  thead = 'stat_'+number;\r\n    htmlhead.push(<thead key={thead}><tr key={`${number}?${0}`}><td>Name</td><td>  Number of Traces </td><td> Percentage </td></tr></thead>)\r\n    for (var i in dictionary) {   \r\n                  const trkey='tr_'+number+'_'+i;\r\n                  const trkey2 = trkey+'_2';\r\n                  const trkey3 = trkey+'_3';\r\n                  htmlbody.push(<tr key={`${number}?${i}`}><td key={trkey}>{i}</td><td key={trkey2}>   {dictionary[i].toString()} </td><td key={trkey3} >  {(100*parseInt(dictionary[i])/parseInt(notraces)).toFixed(3).toString()}  %</td></tr>)\r\n                  \r\n          } \r\n    const tablekey='table_'+number;\r\n        eventhtml.push(<table key={tablekey} className='resultstable'>{htmlhead}<tbody>{htmlbody}</tbody></table>)\r\n    return eventhtml; \r\n  }\r\n\r\n  function buildvariants(dictionary,number){ \r\n      \r\n    const  eventhtml=[];\r\n    const  htmlhead=[]; \r\n    const  htmlbody=[];\r\n    const  thead = 'stat_'+number;\r\n    htmlhead.push(<thead key={thead}><tr key={`${number}?${0}`}><td>Variant</td></tr></thead>)\r\n    for (var i in dictionary) {    \r\n                  htmlbody.push(<tr key={`${number}?${i}`}><td>{dictionary[i].variant.toString()}</td></tr>)\r\n                  \r\n          } \r\n    const tablekey='table_'+number;\r\n        eventhtml.push(<table key={tablekey} className='resultstable'>{htmlhead}<tbody>{htmlbody}</tbody></table>)\r\n    return eventhtml; \r\n  }\r\n  \r\n\r\n  function buildtrace(str){\r\n    var html=\"\";\r\n    if (str != null){\r\n      str = str.replaceAll(\"[\",\"\");\r\n      str = str.replaceAll(\"]\",\"\");\r\n      str = str.replaceAll(\"{\",\"\");\r\n      str = str.replaceAll(\"}\",\"\");\r\n      str = str.replaceAll(\"'\",\"\");\r\n      str = str.replaceAll('\"',''); \r\n      html = 'Structure = ' + str.split(',')[0] + \":\" + str.split(',')[1];\r\n      return html;\r\n    } \r\n  } \r\n\r\nexport default Info;\r\n","import React, { Component } from 'react'; \r\nimport ReactJsAlert from \"reactjs-alert\";\r\nclass Converttocsv extends Component { \r\n\r\nstate={ //if user has not already press yes\r\n    converttostate:false,\r\n    error:''\r\n}\r\n\r\nconverttostate = () => {  \r\n      const data = new FormData();\r\n      data.append('filename',this.props.data);  //send filename to api to convert it\r\n      data.append('folder',this.props.folder);\r\n      fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/convertocsv', {\r\n                                        method: 'POST',\r\n                                        body: data,\r\n      }).then(response => (response.json()))\r\n        .then(data => {  \r\n            if (data[0].api_error===undefined){   \r\n            this.props.parentCallback(data[0].csvname);\r\n            var url =  window.location.href;\r\n            url = url.replace(\"tocsv\", \"mainmenu\");\r\n            window.location.href = url;//redirect to mainmenu after the file convertion\r\n        }\r\n        else{\r\n            this.setState({converttostate:true,error:data[0].api_error}); \r\n        }\r\n      });  \r\n    }\r\n    dontconvert = event =>{   \r\n        var url =  window.location.href;\r\n        url = url.replace(\"tocsv\", \"mainmenu\");\r\n        window.location.href = url;\r\n    } \r\n   render() {    \r\n            if(this.props.data.includes(\".xes\")){       \r\n                if (this.state.converttostate===false){//question if the user wants to convert\r\n                    return(<div>\r\n                        <p className=\"areusure\"><span>Are you sure you want to convert your file</span></p> \r\n                        <button type=\"submit\"  onClick={this.converttostate} className=\"btn  btn-primary pull-right\">YES</button>\r\n                        <button type=\"submit\"  onClick={this.dontconvert} className=\"btn marginleft10 btn-primary pull-right\">NO</button>\r\n                        </div>)\r\n                }\r\n                else{\r\n                    var errorstring=this.state.error.toString();\r\n                    return(<div> \r\n                \r\n                            <ReactJsAlert\r\n                                type=\"warning\"   // success, warning, error, info\r\n                                title={errorstring}   // title you want to display\r\n                                status={true}   // true or false \r\n                                color=\"#FF0000\" \r\n                                 button=\"Try Again\"\r\n                                Close={() => this.setState({ status: false })}   // callback method for hide\r\n                            />\r\n                    </div>);\r\n                }\r\n\r\n            }\r\n            \r\n            else{   //in case the file isn't xes or the user has not selected a file\r\n                return( <p><span>Please select a xes file</span></p> )\r\n            }\r\n          \r\n    }\r\n}\r\n   export default Converttocsv;","import React, { Component } from 'react'; \r\nimport CsvElements from \"./CsvElements.js\";\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nclass Converttoxes extends Component { \r\n\r\nstate={//if user has not already press yes\r\n    converttostate:false,\r\n    error:''  \r\n}\r\n\r\nconverttostate = () => {  \r\n      const data = new FormData();\r\n      data.append('filename',this.props.data);   //send filename to API \r\n      var caseconcept = document.getElementById('caseconcept').value; //get values of dropdown\r\n      var start_timestamp = document.getElementById('start_timestamp').value;  \r\n      var timestamp = document.getElementById('timestamp').value; \r\n      var conceptname = document.getElementById('conceptname').value;   \r\n      data.append('caseconcept',caseconcept);  \r\n      data.append('startevent',start_timestamp);  \r\n      data.append('timestamp',timestamp);  \r\n      data.append('conceptname',conceptname);  \r\n      data.append('seperator',this.props.value.seperator);\r\n      data.append('folder',this.props.folder);\r\n      fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/convertoxes', {\r\n                                        method: 'POST',\r\n                                        body: data,\r\n      }).then(response => (response.json()))\r\n        .then(data => { \r\n            if (data[0].api_error===undefined){   \r\n            this.props.parentCallback(data[0].xesname);\r\n            var url =  window.location.href;\r\n            url = url.replace(\"toxes\", \"mainmenu\"); \r\n            window.location.href = url;}//redirect to main menu after convertion\r\n            else{\r\n                this.setState({converttostate:true,error:data[0].api_error}); \r\n            }\r\n        });  \r\n    }\r\n    dontconvert = event =>{    \r\n        var url =  window.location.href;\r\n        url = url.replace(\"toxes\", \"mainmenu\");\r\n        window.location.href = url;\r\n    } \r\n   render() {    \r\n    if(this.props.data.includes(\".csv\")){  \r\n            if (this.state.converttostate===false){//question if the user wants to convert\r\n\r\n                return(<div>\r\n                     <CsvElements data={this.props.value}></CsvElements> \r\n                    <p className=\"areusure\"><span>Are you sure you want to convert your file</span></p> \r\n                    <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">YES</button>\r\n                    <button type=\"submit\"  onClick={this.dontconvert} className=\"btn marginleft10 btn-primary pull-right\">NO</button>\r\n                    </div>)\r\n            }\r\n            else{\r\n                    var errorstring=this.state.error.toString();\r\n                    return(<div> \r\n                \r\n                            <ReactJsAlert\r\n                                type=\"warning\"   // success, warning, error, info\r\n                                title={errorstring}   // title you want to display\r\n                                status={true}   // true or false \r\n                                color=\"#FF0000\"\r\n                                  button=\"Try Again\"\r\n                                Close={() => this.setState({ status: false })}   // callback method for hide\r\n                            />\r\n                    </div>);\r\n            }\r\n        }\r\n            else{//in case the file isn't xes or the user has not selected a file\r\n                return( <p><span>Please select a csv file</span></p> )\r\n            }\r\n          \r\n    }\r\n}\r\n   export default Converttoxes;","import React, { Component } from 'react';   \r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nclass View extends Component { \r\n       \r\n    state ={\r\n        isok : false,//changes when the API has returned data to be shown\r\n        number:10,//the number of rows to be displayed\r\n        error:''\r\n    } \r\n    view={  //the result from API\r\n        dict:[]\r\n    } \r\n    changeresults= () =>{\r\n        this.setState({number:parseInt(document.getElementById('selectedfromdrop').value)});\r\n    }\r\n    StateImage = () => { \r\n        \r\n        const data = new FormData(); \r\n      //  data.append('filename',this.props.data);  \r\n        data.append('filename',this.props.data); \r\n        if(this.props.data.includes('.csv')){    \r\n                                                if(this.props.value.length>0){\r\n                                                    data.append('seperator',this.props.value);     \r\n                                                }\r\n        }\r\n        data.append('folder',this.props.folder);\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/view', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {  \r\n                    if (data[0].api_error===undefined){\r\n                               this.view.dict= data[0].view;\r\n                               this.setState({isok:true}); //when the API returns data with the content of file\r\n                    }\r\n                    else{\r\n                        this.setState({error:data[0].api_error});\r\n                        this.setState({isok:true}); \r\n                    }\r\n                  }); \r\n        \r\n       }\r\n    //    StateImageCsv = () => {\r\n    //     const data = new FormData(); \r\n    //     data.append('filename',this.props.data); \r\n    //     data.append('folder',this.props.folder);\r\n    //     fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/viewcsv', {\r\n    //                                                     method: 'POST',\r\n    //                                                     body: data,\r\n    //               }).then(response => (response.json()))\r\n    //               .then(data => {  \r\n    //                 if (data[0].error===undefined){\r\n    //                         this.view.dict= data[0].view;\r\n    //                         this.setState({isok:true});//when the API returns data with the content of file\r\n    //                 }\r\n    //    }); \r\n        \r\n    //    }\r\n\r\n       converttostate = event => {   \r\n        this.setState({ isok: true});\r\n        };\r\n       \r\n           render(){\r\n            var  dataframe;\r\n               if (this.props.data.includes(\".xes\")){  \r\n                \r\n                if(this.state.isok===false){\r\n                    this.StateImage(); \r\n                    return(<div>\r\n                              <Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#dc905e\"\r\n                                height={100}\r\n                                width={100} \r\n                                />\r\n                        </div>)     \r\n                }\r\n                else{\r\n                    if(this.state.error.length>0){\r\n                        var errorstring=this.state.error.toString();\r\n                          return(<div> \r\n                        \r\n                                  <ReactJsAlert\r\n                                      type=\"warning\"   // success, warning, error, info\r\n                                      title={errorstring}   // title you want to display\r\n                                      status={true}   // true or false \r\n                                      color=\"#FF0000\"  \r\n                                      button=\"Try Again\"\r\n                                      Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                  />\r\n                          </div>);\r\n                    }\r\n                    else{\r\n                                                            dataframe=builddf(this.view.dict,this.state.number); //build the content of file\r\n                                                            return(<div>\r\n                                                                        <p>Number of resurts</p>\r\n                                                                        <select onChange={() => this.changeresults()} id='selectedfromdrop'><option value='10' >10</option><option value='50'>50</option><option value='-1'>All</option></select>\r\n                                                                        {dataframe} \r\n                                                                </div>)\r\n                    }\r\n                }\r\n                }\r\n               else if(this.props.data.includes(\".csv\")){\r\n                if(this.state.isok===false){\r\n                    this.StateImage(); \r\n                    return(<div>\r\n                              <Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#dc905e\"\r\n                                height={100}\r\n                                width={100} \r\n                                />\r\n                        </div>)     \r\n                }\r\n                else{\r\n                    if(this.state.error.length>0){\r\n                          errorstring=this.state.error.toString();\r\n                          return(<div> \r\n                        \r\n                                  <ReactJsAlert\r\n                                      type=\"warning\"   // success, warning, error, info\r\n                                      title={errorstring}   // title you want to display\r\n                                      status={true}   // true or false \r\n                                      color=\"#FF0000\"\r\n                                        button=\"Try Again\"\r\n                                      Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                  />\r\n                          </div>);\r\n                    }\r\n                    else{\r\n                                dataframe=builddf(this.view.dict,this.state.number);\r\n                                return(<div>\r\n                                            <p>Number of resurts</p>\r\n                                            <select onChange={() => this.changeresults()} id='selectedfromdrop'><option value='10' >10</option><option value='50'>50</option><option value='-1'>All</option></select>\r\n                                        {dataframe} \r\n                                    </div>)\r\n                    }\r\n                }\r\n               \r\n                 \r\n               }\r\n               else{    //in case the user has not select a file\r\n                return(<div>Please select a file from list</div>)\r\n            } \r\n               }\r\n  }\r\nfunction builddf(dictionary,resultsno){  \r\n    var header=[];\r\n    var body=[];\r\n    var tempinside=[];\r\n    const  htmlhead=[]; \r\n    const  dataframe=[];\r\n    const  thead = 'stat_'; \r\n    var key='';\r\n    var headercounter=0;\r\n    var headerkey=''\r\n    var headersaresok=false;\r\n    var counter=0;\r\n    \r\n    for (var i in dictionary){  \r\n        if (resultsno!==-1){\r\n            if(counter===resultsno){    //shows results until number of dropdown\r\n                break;\r\n            }\r\n        }\r\n        if(headersaresok===false){  //headers of file \r\n            for (const [key] of Object.entries(dictionary[i])) {\r\n                headercounter+=1;\r\n                headerkey='header'+headercounter;\r\n                header.push(<td key={headerkey}>{key}</td>); \r\n             }\r\n             headersaresok=true;\r\n        }\r\n        \r\n        for (var j in dictionary[i]){   //content of file\r\n            key='td'+i+'_'+j; \r\n            if (dictionary[i][j]!==null){\r\n                tempinside.push(<td key={key}>{dictionary[i][j].toString()}</td>);\r\n            }\r\n            else{\r\n                tempinside.push(<td key={key}></td>);\r\n            }  \r\n           \r\n        } \r\n         counter++;\r\n        key='tr'+i;\r\n        body.push(<tr key={key}>{tempinside}</tr>)\r\n        tempinside=[];\r\n    }\r\n    htmlhead.push(<thead key={thead}><tr key='headerkey'>{header}</tr></thead>)  \r\n    dataframe.push(<table key='tablekey' className='resultstable'>{htmlhead}<tbody>{body}</tbody></table>)     \r\n    return dataframe; \r\n}\r\nexport default View;\r\n","import React, { Component } from 'react';  \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactJsAlert from \"reactjs-alert\";\r\n\r\nclass Replayresults extends Component { \r\n   \r\n    state ={ \r\n        image:false, //until the API returns response\r\n        dictionary:null,//repsonse from API\r\n        selectedalgo:'',  //selected algorithm \r\n        done:false, //in case of csv file\r\n        error:''\r\n      }\r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    Getalgo =()=>{\r\n        var value=document.getElementById('selectedalgoid').value; \r\n        this.setState({ selectedalgo:value}); \r\n      }\r\n    StateImage = () => {\r\n        const data = new FormData(); \r\n        data.append('filename',this.props.data);  \r\n        data.append('sitealgo', this.state.selectedalgo); \r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n        if(this.props.value.seperator.length>0){\r\n          data.append('seperator',this.props.value.seperator);\r\n        }\r\n        if (document.getElementById('caseconcept')!==null){\r\n          data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n        }\r\n        if (document.getElementById('startevent')!==null){\r\n          data.append('startevent',document.getElementById('startevent').value);  \r\n        }\r\n        if (document.getElementById('timestamp')!==null){\r\n          data.append('timestamp',document.getElementById('timestamp').value);  \r\n        }\r\n        if (document.getElementById('conceptname')!==null){\r\n          data.append('conceptname',document.getElementById('conceptname').value);  \r\n        }\r\n      }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getreplayresults', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => { \r\n                                if (data[0].api_error===undefined){  \r\n                                                                this.setState({ error:'',image: true,dictionary:data[0].dictionary}); \r\n                                }\r\n                                else{\r\n                                  this.setState({error:data[0].api_error}); \r\n                                }\r\n                  }); \r\n        \r\n       } \r\n       converttostate = event => {   \r\n        this.setState({ done: true});\r\n        };\r\n        \r\n           render(){\r\n            var htmltable=[];\r\n               if (this.props.data.includes(\".xes\")){ \r\n                 \r\n                        if(this.state.image===false){  //until the API sends a success response\r\n                            if(this.state.selectedalgo===''){\r\n                                return(<div> <select id=\"selectedalgoid\"   onChange={() => this.Getalgo()}><option value=\"\"></option><option value=\"1\">Alphaminer</option><option value=\"2\">Inductive Miner</option><option value=\"3\">Heuristics Miner</option></select></div>)\r\n                              } \r\n                              else{\r\n                                  if(this.state.error.length>0){\r\n                                    var errorstring=this.state.error.toString();\r\n                                    return(<div> \r\n                                  \r\n                                            <ReactJsAlert\r\n                                                type=\"warning\"   // success, warning, error, info\r\n                                                title={errorstring}   // title you want to display\r\n                                                status={true}   // true or false \r\n                                                color=\"#FF0000\"   \r\n                                                button=\"Try Again\"\r\n                                                Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                            />\r\n                                    </div>);\r\n                                }\r\n                                else{\r\n                                  this.StateImage(); \r\n                                  return(<Loader\r\n                                  type=\"ThreeDots\"\r\n                                  color=\"#dc905e\"\r\n                                  height={100}\r\n                                  width={100} \r\n                                  />)\r\n                              }\r\n                               \r\n                              }\r\n                         \r\n                        }\r\n                        else{\r\n                            htmltable=buildevent(this.state.dictionary); \r\n                        } \r\n\r\n               return(<div> \r\n                           {htmltable}\r\n               </div>)} \r\n               if (this.props.data.includes(\".csv\")){ \r\n                 \r\n                if (this.state.done===false){   //until the user selects csv headers to rename\r\n                  return(  \r\n                      <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                      <div><span>Please Select algorithm</span> <div><select id=\"selectedalgoid\" onChange={() => this.Getalgo()}> <option value=\"1\">Alphaminer</option><option value=\"2\">Inductive Miner</option><option value=\"3\">Heuristics Miner</option></select></div></div>\r\n                      <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                      ) \r\n                 }\r\n                 \r\n                 else{\r\n                      if(this.state.image===false){\r\n                                        if(this.state.error.length>0){\r\n                                          errorstring=this.state.error.toString();\r\n                                          return(<div> \r\n                                        \r\n                                                  <ReactJsAlert\r\n                                                      type=\"warning\"   // success, warning, error, info\r\n                                                      title={errorstring}   // title you want to display\r\n                                                      status={true}   // true or false \r\n                                                      color=\"#FF0000\"\r\n                                                      button=\"Try Again\"\r\n                                                      Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                                  />\r\n                                          </div>);\r\n                                      }\r\n                                      else{\r\n                                        this.StateImage();  \r\n                                        return(<Loader\r\n                                          type=\"ThreeDots\"\r\n                                          color=\"#dc905e\"\r\n                                          height={100}\r\n                                          width={100} \r\n                                          />)\r\n                                      }\r\n                        \r\n                      }\r\n                      else{\r\n                           htmltable=buildevent(this.state.dictionary); \r\n                      } \r\n\r\n                      return(<div> \r\n                          {htmltable}\r\n                        \r\n                      </div>)}\r\n              }\r\n               else{\r\n                return(<div>Please select a file from list</div>)\r\n            } \r\n           }\r\n            \r\n} \r\n    \r\n\r\nfunction buildevent(dictionary){  ///converts API response into table \r\n      \r\n      var obj = dictionary;\r\n      const  eventhtml=[];\r\n      const  htmlhead=[]; \r\n      const  htmlbody=[];\r\n      const  thead = 'stat'; \r\n      htmlhead.push(<thead key={thead}><tr key={0}><td>Trace is fit</td><td>  Trace fitness </td><td> Activated Transitions </td><td> Reached Marking </td>\r\n      <td>Enabled transitions in marking</td><td>Transitions with problems</td><td>Missing Tokens</td><td>Consumed Tokens</td><td>Remaining Tokens</td><td>Produced Tokens</td></tr></thead>)\r\n   \r\n     for ( var i=0;i<obj.length;i++) {   \r\n                  const trkey='tr_'+i;\r\n                  const trkey2 = trkey+'_2';\r\n                  const trkey3 = trkey+'_3';\r\n                  const trkey4 = trkey+'_4';\r\n                  const trkey5 = trkey+'_5'; \r\n                  const trkey7 = trkey+'_7';\r\n                  const trkey8 = trkey+'_8';\r\n                  const trkey9 = trkey+'_9';\r\n                  const trkey10 = trkey+'_10';\r\n                  const trkey11 = trkey+'_11'; \r\n                  htmlbody.push(<tr key={i}><td key={trkey}>{obj[i].trace_is_fit.toString()}</td><td key={trkey2}>   {obj[i].trace_fitness} </td><td key={trkey3} >  {obj[i].activated_transitions}  </td>\r\n                  <td key={trkey4}>{obj[i].reached_marking}</td><td key={trkey5}>{obj[i].enabled_transitions_in_marking}</td><td key={trkey7}>{obj[i].transitions_with_problems}</td>\r\n                  <td key={trkey8}>{obj[i].missing_tokens}</td><td key={trkey9}>{obj[i].consumed_tokens}</td><td key={trkey10}>{obj[i].remaining_tokens}</td><td key={trkey11}>{obj[i].produced_tokens}</td></tr>)\r\n               } \r\n     const tablekey='table';\r\n     eventhtml.push(<table key={tablekey} className='resultstable'>{htmlhead}<tbody>{htmlbody}</tbody></table>)\r\n    return eventhtml; \r\n     \r\n  }\r\n    \r\nexport default Replayresults;\r\n","import React, { Component } from 'react';   \r\nimport CsvElements from \"./CsvElements.js\"\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactJsAlert from \"reactjs-alert\";\r\n\r\nclass Alignments extends Component { \r\n       \r\n    state ={ \r\n      image:false, //until the API returns response\r\n      dictionary:null,//repsonse from API\r\n      selectedalgo:'',  //selected algorithm \r\n      done:false, //in case of csv file\r\n      error:''\r\n  } \r\n    csvheaders= {\r\n        csvheaders:null,\r\n        csvlist:null\r\n    } \r\n    converttostate = event => {   \r\n      this.setState({ done: true});\r\n      };\r\n    Getalgo =()=>{\r\n      var value=document.getElementById('selectedalgoid').value; \r\n      this.setState({ selectedalgo:value}); \r\n    }\r\n    StateImage = () => {\r\n        const data = new FormData(); \r\n        data.append('filename',this.props.data);  \r\n        data.append('sitealgo', this.state.selectedalgo); \r\n        data.append('folder',this.props.folder);\r\n        if(this.props.data.includes('.csv')){  \r\n                if(this.props.value.seperator.length>0){\r\n                  data.append('seperator',this.props.value.seperator);\r\n                }\r\n                if (document.getElementById('caseconcept')!==null){\r\n                  data.append('caseconcept',document.getElementById('caseconcept').value);  \r\n                }\r\n                if (document.getElementById('startevent')!==null){\r\n                  data.append('startevent',document.getElementById('startevent').value);  \r\n                }\r\n                if (document.getElementById('timestamp')!==null){\r\n                  data.append('timestamp',document.getElementById('timestamp').value);  \r\n                }\r\n                if (document.getElementById('conceptname')!==null){\r\n                  data.append('conceptname',document.getElementById('conceptname').value);  \r\n                }\r\n      }\r\n        fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getalignments', {\r\n                                                        method: 'POST',\r\n                                                        body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => { \r\n                                if (data[0].api_error===undefined){   \r\n                                                                this.setState({ error:'',image: true,dictionary:data[0].dictionary}); \r\n                                }\r\n                                else{\r\n                                    this.setState({error:data[0].api_error}); \r\n                                }\r\n                  }); \r\n        \r\n       } \r\n      //  StateImageCSV = () => {\r\n      //   const data = new FormData(); \r\n      //   data.append('filename',this.props.data);  \r\n      //   data.append('sitealgo',document.getElementById('selectedalgoid').value); \r\n      //   var caseconcept = document.getElementById('caseconcept').value; \r\n      //   var start_timestamp = document.getElementById('start_timestamp').value;  \r\n      //   var timestamp = document.getElementById('timestamp').value; \r\n      //   var conceptname = document.getElementById('conceptname').value;   \r\n      //   data.append('seperator',this.props.value.seperator);\r\n      //   data.append('caseconcept',caseconcept);  \r\n      //   data.append('startevent',start_timestamp);  \r\n      //   data.append('timestamp',timestamp);  \r\n      //   data.append('conceptname',conceptname);\r\n      //   data.append('folder',this.props.folder);\r\n      //   fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getalignmentscsv', {\r\n      //                                                   method: 'POST',\r\n      //                                                   body: data,\r\n      //             }).then(response => (response.json()))\r\n      //             .then(data => { \r\n      //                           if (data[0].error===undefined){   \r\n      //                                                           this.setState({ image: true,dictionary:data[0].dictionary}); \r\n      //                           }\r\n      //             }); \r\n        \r\n      //  }  \r\n       \r\n           render(){\r\n          var htmltable=[];\r\n        \r\n          if (this.props.data.includes(\".xes\")){ \r\n                 \r\n                        if(this.state.image===false){ //until the API sends a success response\r\n                          if(this.state.selectedalgo===''){\r\n                            return(<div> <select id=\"selectedalgoid\" onChange={() => this.Getalgo()}><option value=\"\"></option><option value=\"1\">Alphaminer</option><option value=\"2\">Inductive Miner</option><option value=\"3\">Heuristics Miner</option></select></div>)\r\n                          } \r\n                          else{\r\n                            if(this.state.error.length>0){\r\n                              var errorstring=this.state.error.toString();\r\n                              return(<div> \r\n                            \r\n                                      <ReactJsAlert\r\n                                          type=\"warning\"   // success, warning, error, info\r\n                                          title={errorstring}   // title you want to display\r\n                                          status={true}   // true or false \r\n                                          color=\"#FF0000\"  \r\n                                          button=\"Try Again\"\r\n                                          Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                      />\r\n                              </div>);\r\n                          }\r\n                          else{\r\n                              this.StateImage(); \r\n                              return(<Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#dc905e\"\r\n                                height={100}\r\n                                width={100} ></Loader>)\r\n                          }\r\n                           \r\n                          } \r\n                        }\r\n                        else{\r\n                             htmltable=buildevent(this.state.dictionary); \r\n                        } \r\n\r\n               return(<div> \r\n                           {htmltable}\r\n               </div>)}\r\n          else if (this.props.data.includes(\".csv\")){ \r\n                if (this.state.done===false){    //until the user selects csv headers to rename\r\n                  return(  \r\n                      <div>  <CsvElements data={this.props.value}></CsvElements> \r\n                      <div><span>Please Select algorithm</span> <div><select id=\"selectedalgoid\" onChange={() => this.Getalgo()}> <option value=\"1\">Alphaminer</option><option value=\"2\">Inductive Miner</option><option value=\"3\">Heuristics Miner</option></select></div></div>\r\n                      <button type=\"submit\"  onClick={this.converttostate} className=\"btn btn-primary pull-right\">Continue</button> </div>\r\n                      ) \r\n                 }\r\n                 else{\r\n                  if(this.state.image===false){ \r\n                                      if(this.state.error.length>0){\r\n                                        errorstring=this.state.error.toString();\r\n                                        return(<div> \r\n                                      \r\n                                                <ReactJsAlert\r\n                                                    type=\"warning\"   // success, warning, error, info\r\n                                                    title={errorstring}   // title you want to display\r\n                                                    status={true}   // true or false \r\n                                                    color=\"#FF0000\"\r\n                                                      button=\"Try Again\"\r\n                                                    Close={() => this.setState({ status: false })}   // callback method for hide\r\n                                                />\r\n                                        </div>);\r\n                                    }\r\n                                    else{\r\n                                      this.StateImage();  \r\n                                        return(<Loader\r\n                                          type=\"ThreeDots\"\r\n                                          color=\"#dc905e\"\r\n                                          height={100}\r\n                                          width={100} \r\n                                          />)\r\n                                    }\r\n                      \r\n                  }\r\n                  else{\r\n                       htmltable=buildevent(this.state.dictionary); \r\n                  } \r\n             \r\n         return(<div> \r\n                     {htmltable}\r\n                    \r\n         </div>)}\r\n         }\r\n        else{\r\n            return(<div>Please select a file from list</div>)\r\n            }  \r\n        }\r\n           \r\n            \r\n} \r\nvar key=0;\r\n\r\nfunction buildevent(dictionary){  \r\n      \r\n      var obj = dictionary; //gets reponse from APi\r\n      var returnhtml = [];\r\n      for ( var i=0;i<obj.length;i++) {      \r\n        key++; \r\n        returnhtml.push(<div key={key} className=\"pdropwdown\">{buildsinglealignemnt(obj[i].alignment,i)}</div>); //creates a single table for every object of dictionary\r\n      }\r\n\r\n \r\n    return returnhtml;\r\n     \r\n  }\r\n    \r\n\r\nfunction buildsinglealignemnt(step_list,number){\r\n  var trace_steps=[];\r\n  var model_steps=[];\r\n  var max_label_length = 0; \r\n  var rethtml=[];\r\n  var rethtml2=[];\r\n  var dividerhtml=[];\r\n  var step=[];\r\n  var splitstep = step_list.toString().split(','); \r\n  var i,j; \r\n  for (i=0;i<splitstep.length;i+=2){\r\n    step.push(splitstep[i]+','+splitstep[i+1]);\r\n  } \r\n  for (i=0;i<step.length;i++)\r\n  {  \r\n    var insidesplitstep=step[i].toString().split(',');\r\n    trace_steps.push(\" \" + insidesplitstep[0].toString() + \" \")\r\n    model_steps.push(\" \" +  insidesplitstep[1].toString()  + \" \")\r\n    if ((insidesplitstep[0].length) > max_label_length){\r\n         max_label_length = insidesplitstep[0].toString().length;\r\n    }\r\n    if ( insidesplitstep[1].toString().length > max_label_length){\r\n         max_label_length =  insidesplitstep[1].toString().length;\r\n    }\r\n    \r\n  }\r\n  for (i=0;i<trace_steps.length;i++){\r\n    if  (trace_steps[i].toString().length - 2 < max_label_length){\r\n            var step_length =  trace_steps[i].toString().length - 2;\r\n            var spaces_to_add = max_label_length - step_length;\r\n            for (j=0;j<spaces_to_add;j++){  \r\n                if (j % 2 === 0){\r\n                    trace_steps[i] = trace_steps[i] + \" \";\r\n                  }\r\n                else{\r\n                    trace_steps[i] = \" \" + trace_steps[i];\r\n                  }\r\n            }\r\n      }  \r\n      \r\n      key++;\r\n      rethtml.push(<td key={key}>{trace_steps[i]}</td>);\r\n  }\r\n  var devkey='div1'+number;\r\n  dividerhtml.push(<tr key={devkey}>{rethtml}</tr>); \r\n  for (i=0;i<model_steps.length;i++)\r\n  {\r\n    if ((model_steps[i].length - 2) < max_label_length){\r\n            var step_lengthmodel = model_steps[i].length - 2;\r\n            var spaces_to_addmodel = max_label_length - step_lengthmodel;\r\n            for (j=0;j<spaces_to_addmodel;j++){\r\n                if (j % 2 === 0){\r\n                    model_steps[i] = model_steps[i] + \" \";\r\n                  }\r\n                else{\r\n                    model_steps[i] = \" \" + model_steps[i];\r\n                  }\r\n            }\r\n            \r\n    } \r\n    key++;\r\n    rethtml2.push(<td  key={key} >{model_steps[i]}</td>);\r\n  }  \r\n  var devkey2='div2'+number;\r\n  dividerhtml.push(<tr key={devkey2}>{rethtml2}</tr>)\r\n  var finalhtml=[];\r\n  key++;\r\n  finalhtml.push(<table key={key}><tbody>{dividerhtml}</tbody></table>);\r\n  return finalhtml; \r\n}\r\n\r\n\r\nexport default Alignments;\r\n","import React, { Component } from 'react';  \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMailBulk } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\r\n \r\n\r\nclass Signup extends Component { \r\n       \r\n      state = {\r\n        isvalid:false,\r\n        mail:\"\"    \r\n      }  \r\n   \r\n      onFileChange = event => {  \r\n        // if((event.target.files[0].name.includes('.xes'))||(event.target.files[0].name.includes('.csv'))){ //save only xes or csv files on state\r\n        //       document.getElementById('selectedfilename').innerText=(event.target.files[0].name);\r\n        //       this.file.selectedfile = event.target.files[0] ;\r\n        //       this.file.filename=event.target.files[0].name; \r\n        // }\r\n     };   \r\n     signupbtn = event => {    \r\n          \r\n            if((document.querySelector('#usermail').value.length>0)&&(document.querySelector('#userpassword').value.length>0)){\r\n                  if (ValidateEmail(document.querySelector('#usermail'))===false){\r\n                    document.querySelector('#mailspan').classList.remove(\"visiblehidden\"); \r\n                    document.querySelector('#mailspan').classList.add(\"visibleenable\"); \r\n                    return;\r\n                  }\r\n\r\n                  if(document.querySelector('#userpassword').value!==document.querySelector('#userpassword2').value){\r\n                    document.querySelector('#passwordspan').classList.remove(\"visiblehidden\"); \r\n                    document.querySelector('#passwordspan').classList.add(\"visibleenable\"); \r\n                    document.querySelector('#passwordspan').textContent=\"Please insert the same passwords\";\r\n                    return;\r\n                  }\r\n                  if(document.querySelector('#userpassword').value.length<6){\r\n                    document.querySelector('#passwordspan').classList.remove(\"visiblehidden\"); \r\n                    document.querySelector('#passwordspan').classList.add(\"visibleenable\"); \r\n                    document.querySelector('#passwordspan').textContent=\"The password must have more than 6 characters\";\r\n                    return;\r\n                  }\r\n\r\n                  const data = new FormData(); \r\n                  data.append('usermail', document.querySelector('#usermail').value); \r\n                  data.append('password',document.querySelector('#userpassword').value);   \r\n                  fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/createuser', {\r\n                  method: 'POST',\r\n                  body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {   \r\n                    if (data[0].error===undefined){  \r\n                      this.props.parentCallback();\r\n                    }\r\n                    else{\r\n                     \r\n                    }\r\n                  }).catch((error) => { \r\n                 //   document.getElementById('selectedfilename').innerText=(\"500 Internal Server Error\");\r\n                  });\r\n                }\r\n                else{\r\n                  if(document.querySelector('#usermail').value.length===0){ \r\n                    document.querySelector('#mailspan').classList.remove(\"visiblehidden\"); \r\n                    document.querySelector('#mailspan').classList.add(\"visibleenable\"); \r\n                    return;\r\n                  }\r\n                  if(document.querySelector('#userpassword').value.length===0){\r\n                    document.querySelector('#passwordspan').classList.remove(\"visiblehidden\"); \r\n                    document.querySelector('#passwordspan').classList.add(\"visibleenable\"); \r\n                    document.querySelector('#passwordspan').textContent=\"Please fill password\";\r\n                    return;\r\n                  }\r\n                }\r\n               \r\n     }\r\n     changemail(event)\r\n     { \r\n        document.querySelector('#mailspan').classList.add(\"visiblehidden\"); \r\n        document.querySelector('#mailspan').classList.remove(\"visibleenable\"); \r\n     }\r\n\r\n       changepass(event)\r\n     { \r\n      document.querySelector('#passwordspan').classList.add(\"visiblehidden\"); \r\n      document.querySelector('#passwordspan').classList.remove(\"visibleenable\"); \r\n     }\r\n     \r\n     return = () => {\r\n        this.props.parentCallback();\r\n     }\r\n      render() {          \r\n        if (this.state.isvalid === false){         // shows the file upload box\r\n          \r\n          return (\r\n            <div className=\"centeredlogin\"> \r\n                <div className=\"backgroundlogin\">\r\n                    <h1 className=\"loginpadlr\">Member Signup</h1>\r\n                    \r\n                    <div   id=\"usernamediv\" className=\"form-group textSingupmail\">  \r\n                        <FontAwesomeIcon className=\"fontawesomeposition\" icon={faMailBulk} />\r\n                        <input id=\"usermail\" className=\"form-control\" type=\"text\" onBlur={this.changemail} placeholder=\"E-mail\"></input>\r\n                        <span id=\"mailspan\" className=\"visiblehidden\" >Please provide a valid mail</span>\r\n                    </div>\r\n                    <div   id=\"passworddiv\" className=\"form-group textSinguppass\">  \r\n                        <FontAwesomeIcon className=\"fontawesomeposition\" icon={faLock} />\r\n                        <input id=\"userpassword\" className=\"form-control\" placeholder=\"Password\"  onBlur={this.changepass}  type=\"password\" ></input>\r\n                    </div>\r\n                    <div   id=\"passworddiv\" className=\"form-group textSinguppass2\">  \r\n                        <FontAwesomeIcon className=\"fontawesomeposition\" icon={faLock} />\r\n                        <input id=\"userpassword2\" className=\"form-control\" placeholder=\"Retype Password\"  onBlur={this.changepass}  type=\"password\" ></input>\r\n                    </div>\r\n                    <span id=\"passwordspan\" className=\"visiblehidden\"  >Password</span>\r\n                    <div className=\"fixsignupos\"> \r\n                      <center>\r\n                      <input type=\"button\" id=\"signupbtn\" className=\"returnbtn\"  onClick={this.return} value=\"Back to Login\"></input>\r\n                      <input type=\"button\" id=\"signupbtn\" className=\"loginbtn\"  onClick={this.signupbtn} value=\"Create Account\"></input>\r\n                      \r\n                      </center>\r\n                    </div>\r\n                     \r\n                    </div>\r\n                   \r\n            </div>\r\n          );\r\n        }\r\n        else{   \r\n\r\n               this.props.parentCallback(this.state.mail);\r\n              return(\r\n                <div></div>)\r\n        }\r\n    }\r\n            \r\n            \r\n  }//CLASS END  \r\n \r\nfunction ValidateEmail(input) {\r\n\r\n  var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  if (input.value.match(validRegex)) {\r\n \r\n    return true;\r\n\r\n  } else { \r\n\r\n    return false;\r\n\r\n  }\r\n\r\n}\r\n  \r\n    \r\nexport default Signup;\r\n","import React, { Component } from 'react';  \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMailBulk } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\r\nimport {\r\n  Route, \r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Signup from \"./Signup.js\" \r\n\r\nclass Login extends Component { \r\n      \r\n      loginuser={\r\n        mail:\"\"\r\n      }\r\n      \r\n      state = {\r\n        isvalid:false,\r\n        mail:\"\",\r\n        signup:false    \r\n      }  \r\n   \r\n      onFileChange = event => {  \r\n        // if((event.target.files[0].name.includes('.xes'))||(event.target.files[0].name.includes('.csv'))){ //save only xes or csv files on state\r\n        //       document.getElementById('selectedfilename').innerText=(event.target.files[0].name);\r\n        //       this.file.selectedfile = event.target.files[0] ;\r\n        //       this.file.filename=event.target.files[0].name; \r\n        // }\r\n     };   \r\n     loginbtnClick = event => {    \r\n            \r\n      if((document.querySelector('#usermail').value.length>0)&&(document.querySelector('#userpassword').value.length>0)){\r\n       \r\n            if((document.querySelector('#usermail').value.length>0)&&(document.querySelector('#userpassword').value.length>0)){\r\n                  const data = new FormData(); \r\n                  data.append('usermail', document.querySelector('#usermail').value); \r\n                  data.append('password',document.querySelector('#userpassword').value);   \r\n                  fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/authenticate', {\r\n                  method: 'POST',\r\n                  body: data,\r\n                  }).then(response => (response.json()))\r\n                  .then(data => {    \r\n                    if ((data[0].error===undefined)&&(data[0].api_error===undefined)){  \r\n                      this.loginuser.mail = data[0].success;\r\n                      this.setState({ isvalid: true }); \r\n                    }\r\n                    else{ \r\n                      document.querySelector('#apispan').classList.remove(\"visiblehidden\"); \r\n                      document.querySelector('#apispan').classList.add(\"visibleenable\"); \r\n                    }\r\n                  }).catch((error) => { \r\n                 //   document.getElementById('selectedfilename').innerText=(\"500 Internal Server Error\");\r\n                  });\r\n                }\r\n              }\r\n              else{\r\n                if(document.querySelector('#usermail').value.length===0){ \r\n                  document.querySelector('#mailspan').classList.remove(\"visiblehidden\"); \r\n                  document.querySelector('#mailspan').classList.add(\"visibleenable\"); \r\n                  return;\r\n                }\r\n                if(document.querySelector('#userpassword').value.length===0){\r\n                  document.querySelector('#passwordspan').classList.remove(\"visiblehidden\"); \r\n                  document.querySelector('#passwordspan').classList.add(\"visibleenable\");  \r\n                  return;\r\n                }\r\n              }\r\n     }\r\n\r\n     redirect= event => {    \r\n      this.setState({ signup: true}); \r\n     }\r\n     callbackFunction = event => {\r\n      this.setState({ signup: false}); \r\n     }\r\n     changemail(event)\r\n     { \r\n        document.querySelector('#mailspan').classList.add(\"visiblehidden\"); \r\n        document.querySelector('#mailspan').classList.remove(\"visibleenable\"); \r\n        document.querySelector('#apispan').classList.add(\"visiblehidden\"); \r\n        document.querySelector('#apispan').classList.remove(\"visibleenable\"); \r\n     }\r\n\r\n       changepass(event)\r\n     { \r\n      document.querySelector('#passwordspan').classList.add(\"visiblehidden\"); \r\n      document.querySelector('#passwordspan').classList.remove(\"visibleenable\"); \r\n      document.querySelector('#apispan').classList.add(\"visiblehidden\"); \r\n      document.querySelector('#apispan').classList.remove(\"visibleenable\"); \r\n     }\r\n     \r\n     \r\n     sendData = () => {\r\n        this.props.parentCallback(this.file.filename);\r\n     }\r\n      render() {          \r\n       if(this.state.signup===false){\r\n        if (this.state.isvalid === false){          \r\n          \r\n          return (\r\n            <div className=\"centeredlogin\" > \r\n                <div className=\"backgroundlogin\">\r\n                    <h1 className=\"loginpadlr\">Member Login</h1>\r\n                    \r\n                    <div   id=\"usernamediv\" className=\"form-group textlogin\">  \r\n                        <FontAwesomeIcon className=\"fontawesomeposition\" icon={faMailBulk} />\r\n                        <input id=\"usermail\" className=\"form-control\" type=\"text\" onBlur={this.changemail} placeholder=\"E-mail\"></input>\r\n                        <span id=\"mailspan\" className=\"visiblehidden\" >Please provide a valid mail</span>\r\n                    </div>\r\n\r\n                    <div   id=\"passworddiv\" className=\"form-group passlogin\">  \r\n                        <FontAwesomeIcon className=\"fontawesomeposition\" icon={faLock} />\r\n                        <input id=\"userpassword\" className=\"form-control\" placeholder=\"Password\"  onBlur={this.changepass}  type=\"password\" ></input>\r\n                        <span id=\"passwordspan\" className=\"visiblehidden\" >Please provide a valid password</span>\r\n                    </div>\r\n                    <span id=\"apispan\" className=\"visiblehidden\" >Please enter a correct mail or password</span>\r\n                    <center>\r\n                    <input type=\"button\" id=\"loginbtn\" className=\"loginbtn\"  onClick={this.loginbtnClick} value=\"Login\"></input>\r\n                    </center>\r\n                    <div>\r\n                      <span>Don't have an account. </span><a onClick={this.redirect} href=\"#newacc\" >Signup here</a> \r\n                    </div>\r\n                     \r\n                    </div>\r\n                   \r\n            </div>\r\n          );\r\n        }\r\n        else{   \r\n              this.props.parentCallback(this.loginuser.mail);\r\n              return(\r\n                <div></div>)\r\n        }\r\n    }\r\n    else{\r\n         return(<div>\r\n             <HashRouter>\r\n            <Route path=\"/newacc\" component={() => <Signup parentCallback = {this.callbackFunction}  />} />\r\n            </HashRouter>\r\n         </div>) \r\n    }\r\n  }      \r\n            \r\n  }//CLASS END  \r\n \r\n   \r\n  \r\n    \r\nexport default Login;\r\n","\r\n\r\nimport React, { Component } from 'react';  \r\nimport FirsTime from \"./FirsTime.js\"\r\nimport InductiveMiner from \"./InductiveMiner.js\"\r\nimport AlphaMiner from \"./AlphaMiner.js\"\r\nimport HeuristicMiner from \"./HeuristicMiner.js\"\r\nimport Frequency from \"./Frequency.js\"\r\nimport Meanduration from \"./Meanduration.js\"\r\nimport Traceduration from \"./Traceduration.js\"\r\nimport Activityduration from \"./Activityduration.js\"\r\nimport Conceptname from \"./Conceptname.js\"\r\nimport Info from \"./Info.js\"\r\nimport Converttocsv from \"./Converttocsv.js\"\r\nimport Converttoxes from \"./Converttoxes.js\"\r\nimport View from \"./View.js\"\r\nimport Replayresults from \"./Replayresults.js\"\r\nimport Alignments from \"./Alignments.js\"\r\nimport Login from \"./Login.js\"\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport * as Cookies from \"js-cookie\"\r\nimport {\r\n  Route, \r\n  HashRouter\r\n} from \"react-router-dom\";\r\n \r\nclass Middle extends Component { \r\n  state={\r\n    files:false,    //boolean if files exist\r\n    specific:\"\" , //if user clicks on a file\r\n    reload:false  //refresh state after headers are loaded \r\n  } \r\n\r\n  \r\n\r\n  userfiles = {   //all files\r\n    allfiles:[]\r\n  }\r\n  csvheaders= { //object of csv file header\r\n    csvheaders:null,\r\n    csvlist:null,\r\n    seperator:';'\r\n  } \r\n  \r\n  logout=()=>{  \r\n //   this.userfiles.allfiles=[];\r\n    Cookies.remove(\"session\");\r\n    Cookies.remove(\"hasfiles\");\r\n    Cookies.remove(\"files\");\r\n    this.setState({reload:true,files:false}); \r\n  }\r\n\r\n  GetFileNames=()=>{ \r\n    const data = new FormData();  \r\n    this.userfiles.allfiles=[];\r\n   data.append('folder',   Cookies.get(\"session\"));   \r\n    fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/getfilenames', {\r\n                                      method: 'POST' ,\r\n                                      body: data\r\n    }).then(response => (response.json()))\r\n      .then(data => {  \r\n        var hasfiles =false;\r\n        if (data[0].error===undefined){ \r\n          for (var x in data[0].filenames){\r\n            hasfiles=true; \r\n\r\n            if (data[0].filenames[x].includes('xes')){    //value of xes files in dictionary is true else false\r\n              this.userfiles.allfiles[data[0].filenames[x]]=true\r\n         \r\n              }else{\r\n              this.userfiles.allfiles[data[0].filenames[x]]=false\r\n              }\r\n          }\r\n          if (hasfiles===true){     \r\n            Cookies.set(\"hasfiles\",true); \r\n            this.setState({files:true}); \r\n          } \r\n          else{\r\n            this.setState({reload:true});\r\n          }\r\n        }\r\n        else{\r\n          this.setState({reload:true});\r\n        }\r\n    });\r\n  }\r\n  Getheadersep =()=>{\r\n    if(this.state.specific!==''){\r\n      this.Getheaders(this.state.specific); //if a file is selected get headers\r\n    }\r\n  }\r\n  Getheaders = (file) => {\r\n        const data = new FormData();  //get file headers from API\r\n            data.append('filename',file);   \r\n            data.append('seperator',document.getElementById('selectedsep').value);   \r\n            data.append('folder',Cookies.get(\"session\"));\r\n            fetch((window.globalConfig['serverURL'] || { siteName: process.env.REACT_APP_SERVER_URL})+'/headers', {\r\n                                              method: 'POST',\r\n                                              body: data,\r\n            }).then(response => (response.json()))\r\n              .then(data => { \r\n                if (data[0].error===undefined){\r\n                this.csvheaders.csvlist=data[0].dataheaderslist; \r\n                this.csvheaders.seperator=document.getElementById('selectedsep').value;\r\n                this.setState({reload:true});\r\n                }\r\n            });\r\n    }\r\n    clear = ()=>{\r\n      \r\n    }\r\n  callbackFunction = (childData) => {  \r\n    if(childData!==null){\r\n        if(childData.includes(\".xes\")){\r\n          this.userfiles.allfiles[childData]=true;\r\n          this.setState({files:true});\r\n          Cookies.set(\"hasfiles\",true); \r\n        }\r\n        if(childData.includes(\".csv\")){\r\n          this.userfiles.allfiles[childData]=false;\r\n          this.setState({files:true});\r\n          Cookies.set(\"hasfiles\",true); \r\n        } \r\n  }\r\n  };\r\n\r\n  callbackFunctionUser = (childData) => {     \r\n     Cookies.set(\"session\", childData);\r\n     this.GetFileNames();\r\n  };\r\n\r\n  changecolor = event => {   \r\n          var all = document.getElementsByClassName(\"filelistitem\");\r\n          for (var i=0;i<all.length;i++){\r\n            all[i].classList.remove(\"greenfont\");\r\n          } \r\n          var specific =  document.getElementById(event);\r\n          specific.classList.add(\"greenfont\"); \r\n          this.setState({specific:specific.innerHTML});\r\n          if(specific.innerHTML.includes(\".csv\")){ \r\n            this.Getheaders(specific.innerHTML);\r\n          }\r\n  };\r\n\r\n  render() {  \r\n    var sidetable = []; \r\n   \r\n  if (Cookies.get(\"session\") !== undefined) {   \r\n  if (Boolean(Cookies.get(\"hasfiles\"))===true){ //if main menu has files  \r\n  if (this.state.files===true){ //if main menu has files\r\n  return (\r\n      <div>\r\n         <HashRouter>\r\n           \r\n       <ul className=\"header\">\r\n              \r\n              <li>\r\n                <div className=\"dropdown hideelemnt\"><button className=\"dropbtn\"> File </button>\r\n                    <div className=\"dropdown-content\">\r\n                      <a href=\"#/upload\">Upload</a> \r\n                      <a href=\"#/toxes\">Convert to xes</a> \r\n                      <a href=\"#/tocsv\">Convert to csv</a> \r\n                      <a href=\"#/view\">View</a> \r\n                      <a href=\"#/info\">Info</a>  \r\n                    </div>\r\n                  </div> \r\n              </li>\r\n              <li>  \r\n                  <div  className=\"dropdown hideelemnt\"><button className=\"dropbtn\"> Discover Model </button>\r\n                    <div className=\"dropdown-content\">\r\n                      <a href=\"#/alphaminer\">Alpha Miner</a> \r\n                      <a href=\"#/hminer\">Heuristics Miner</a>  \r\n                      <a href=\"#/iminer\">Inductive Miner</a>  \r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              <li>\r\n              <div className=\"dropdown hideelemnt\"><button className=\"dropbtn\"> Statistics </button>\r\n                    <div className=\"dropdown-content \"> \r\n\r\n                    <div className=\"dropdown2 hideelemnt\"><button className=\"dropbtn dropevents\"> Events </button>\r\n                    {/* <div className=\"dropdown-content2 dropdown-contentevents\"> \r\n                           <a className=\"frequency\" href=\"#/frequency\">Frequency</a>\r\n                    \r\n                    </div> */}\r\n                    <a className=\"frequency\" href=\"#/frequency\">Frequency</a>\r\n                    <a href=\"#/activityduration\">Activity Duration</a>  \r\n                    <a href=\"#/conceptname\">Concept Name</a>   \r\n                    <a href=\"#/meanduration\">Mean Durations</a>   \r\n                    <a href=\"#/traceduration\">Trace Durations</a>   \r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n              </li>\r\n              <li><div className=\"dropdown hideelemnt\"><button className=\"dropbtn\"> Conformance </button>\r\n                  <div className=\"dropdown-content \"> \r\n                        <a href=\"#/replayresults\">Replay Results</a>  \r\n                        <a href=\"#/Alignments\">Alignments</a>   \r\n              </div>\r\n              </div>\r\n              </li>\r\n              <li className=\"logout\">\r\n                  <a href=\"#/\"  className=\"logoutspan\" onClick={this.logout}>Log Out</a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"sidenav movelike10\"> \r\n              <div className=\"sidebar\" >\r\n              <div className=\"w3-sidebar w3-light-grey w3-bar-block\" > \r\n                    <h3 className=\"w3-bar-item\">Files</h3>\r\n                    <div><p className=\"chooseseperatordiv\">Choose sepeartor</p><input id='selectedsep' className='selectedsep' onChange={() => this.Getheadersep()} /> </div>\r\n                    {Object.entries(this.userfiles.allfiles).map(([key, value]) => {\r\n                            sidetable.push(<div key={key} className=\" w3-button\"><span id={key} onClick={() => this.changecolor(key)} className=\"w3-bar-item filelistitem\">{key}</span></div> );\r\n                            return false;\r\n                          })} \r\n                    {sidetable} \r\n                    </div>\r\n              </div>\r\n              \r\n              </div><div className=\"main\">  \r\n            <div className=\"content contentwidth\">  \r\n              <Route path=\"/replayresults\" component={() => <Replayresults value={this.csvheaders} folder={Cookies.get(\"session\")} data={this.state.specific} parentCallback = {this.callbackFunction}   />} />\r\n              <Route path=\"/toxes\" component={() => <Converttoxes value={this.csvheaders}  folder={Cookies.get(\"session\")}  data={this.state.specific} parentCallback = {this.callbackFunction}   />} />\r\n              <Route path=\"/tocsv\" component={() => <Converttocsv  data={this.state.specific}  folder={Cookies.get(\"session\")}  parentCallback = {this.callbackFunction}   />} />\r\n              <Route path=\"/upload\" component={() => <FirsTime   folder={Cookies.get(\"session\")}  parentCallback = {this.callbackFunction}   />} />\r\n              <Route path=\"/alphaminer\" component={() => <AlphaMiner  folder={Cookies.get(\"session\")}  value={this.csvheaders} data={this.state.specific}/>} />\r\n              <Route path=\"/hminer\" component={() => <HeuristicMiner  folder={Cookies.get(\"session\")}  value={this.csvheaders}  data={this.state.specific}/>} />\r\n              <Route path=\"/iminer\" component={() => <InductiveMiner  folder={Cookies.get(\"session\")}  value={this.csvheaders}   data={this.state.specific}/>} />\r\n              <Route path=\"/frequency\" component={() => <Frequency  folder={Cookies.get(\"session\")}  value={this.csvheaders}  data={this.state.specific}/>} />\r\n              <Route path=\"/activityduration\" component={() => <Activityduration value={this.csvheaders}  folder={Cookies.get(\"session\")}  data={this.state.specific} parentCallback = {this.callbackFunction}   />} />    \r\n              <Route path=\"/conceptname\" component={() => <Conceptname value={this.csvheaders}  folder={Cookies.get(\"session\")}  data={this.state.specific} parentCallback = {this.callbackFunction}   />} />    \r\n              <Route path=\"/meanduration\" component={() => <Meanduration value={this.csvheaders}  folder={Cookies.get(\"session\")}  data={this.state.specific} parentCallback = {this.callbackFunction}   />} />    \r\n              <Route path=\"/traceduration\" component={() => <Traceduration value={this.csvheaders}  folder={Cookies.get(\"session\")}  data={this.state.specific} parentCallback = {this.callbackFunction}   />} />    \r\n              <Route path=\"/info\" component={() => <Info value={this.csvheaders}  folder={Cookies.get(\"session\")}  data={this.state.specific}/>} />\r\n              <Route path=\"/view\" component={() => <View  folder={Cookies.get(\"session\")}  value={this.csvheaders.seperator} data={this.state.specific}/>} />\r\n              <Route path=\"/alignments\" component={() => <Alignments value={this.csvheaders}  folder={Cookies.get(\"session\")}  data={this.state.specific} parentCallback = {this.callbackFunction}   />} />  \r\n                        \r\n           </div> \r\n            </div>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n    }else{\r\n      this.GetFileNames();\r\n      return(<div><Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#dc905e\"\r\n        height={100}\r\n        width={100} \r\n        /></div>);\r\n    }\r\n  }else{ //shows the upload screen\r\n    //this.GetFileNames();\r\n    return (\r\n      <div>\r\n         <HashRouter>\r\n       <ul className=\"header\">\r\n             <li>\r\n                <div className=\"dropdown\"><button className=\"dropbtn\"> File </button>\r\n                    <div className=\"dropdown-content\">\r\n                      <a href=\"#/mainmenu\">Upload</a>  \r\n                    </div>\r\n                  </div> \r\n              </li>\r\n              <li className=\"logout\">\r\n                  <a className=\"logoutspan\" href=\"#/\" onClick={this.logout}>Log Out</a>\r\n              </li>\r\n            </ul> \r\n            <div className=\"content\">\r\n                 \r\n            <Route path=\"/mainmenu\" component={() => <FirsTime folder={Cookies.get(\"session\")} parentCallback = {this.callbackFunction}   />} />\r\n              {/* <Route path=\"/stuff\" component={Stuff}/>\r\n              <Route path=\"/contact\" component={Contact}/> */}\r\n            </div>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nelse{  \r\n  return (\r\n    <div>\r\n    <HashRouter>\r\n  \r\n       <div className=\"content\">\r\n            \r\n       <Route path=\"/\" component={() => <Login  parentCallback = {this.callbackFunctionUser}   />} />\r\n         {/* <Route path=\"/stuff\" component={Stuff}/>\r\n         <Route path=\"/contact\" component={Contact}/> */}\r\n       </div>\r\n   </HashRouter>\r\n </div>\r\n\r\n\r\n//     <div>\r\n//     <HashRouter>\r\n  \r\n//        <div className=\"content\">\r\n            \r\n//        <Route path=\"/mainmenu\" component={() => <Login  parentCallback = {this.callbackFunctionUser}   />} />\r\n//          {/* <Route path=\"/stuff\" component={Stuff}/>\r\n//          <Route path=\"/contact\" component={Contact}/> */}\r\n//        </div>\r\n//    </HashRouter>\r\n//  </div>\r\n  );\r\n}\r\n}\r\n}  \r\nexport default Middle;\r\n","import React from \"react\"; \r\nimport Footer from \"./Footer\";\r\nimport Middle from \"./Middle\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"page-container\">\r\n      {/* <Header /> */}\r\n      <Middle /> \r\n      <Footer /> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n \nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}